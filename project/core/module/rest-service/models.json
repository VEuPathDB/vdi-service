{
  "API_Error": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.APIError",
        "model": {
          "permits": [
            "BadRequestError",
            "InternalServerError",
            "NotFoundError",
            "UnauthorizedRequestError"
          ],
          "name": "API_Error",
          "schemaName": "API_Error",
          "classname": "APIError",
          "title": "API Error",
          "classVarName": "apIError",
          "dataType": "Any",
          "classFilename": "APIError",
          "discriminator": {
            "propertyName": "status",
            "propertyBaseName": "status",
            "propertyGetter": "getStatus",
            "propertyType": "ErrorStatus",
            "isEnum": true,
            "mappedModels": [
              {
                "mappingName": "bad-request",
                "modelName": "BadRequestError",
                "model": {
                  "parent": "APIError",
                  "parentSchema": "API_Error",
                  "interfaces": [
                    "APIError"
                  ],
                  "allOf": [
                    "APIError"
                  ],
                  "name": "Bad_Request_Error",
                  "schemaName": "Bad_Request_Error",
                  "classname": "BadRequestError",
                  "title": "Bad Request Error",
                  "classVarName": "badRequestError",
                  "dataType": "APIError",
                  "classFilename": "BadRequestError",
                  "allMandatory": [
                    "message",
                    "status"
                  ],
                  "imports": [
                    "com.fasterxml.jackson.annotation.JsonProperty"
                  ],
                  "emptyVars": true,
                  "hasEnums": true,
                  "hasRequired": true,
                  "hasOnlyReadOnly": false,
                  "vendorExtensions": {
                    "x-discriminator-value": "bad-request",
                    "x-has-data-class-body": true
                  },
                  "composedSchemas": {
                    "allOf": [
                      {
                        "openApiType": "APIError",
                        "baseName": "all_of_0",
                        "complexType": "APIError",
                        "getter": "getAllOf0",
                        "setter": "setAllOf0",
                        "dataType": "APIError",
                        "datatypeWithEnum": "APIError",
                        "name": "allOf0",
                        "baseType": "APIError",
                        "example": "null",
                        "isModel": true,
                        "nameInCamelCase": "allOf0",
                        "nameInPascalCase": "AllOf0",
                        "nameInSnakeCase": "ALL_OF0",
                        "hasSanitizedName": true,
                        "ref": "#/components/schemas/API_Error"
                      },
                      {
                        "openApiType": "Any",
                        "baseName": "all_of_1",
                        "getter": "getAllOf1",
                        "setter": "setAllOf1",
                        "dataType": "Any",
                        "datatypeWithEnum": "Any",
                        "name": "allOf1",
                        "baseType": "Any",
                        "example": "null",
                        "isAnyType": true,
                        "isNullable": true,
                        "nameInCamelCase": "allOf1",
                        "nameInPascalCase": "AllOf1",
                        "nameInSnakeCase": "ALL_OF1",
                        "hasSanitizedName": true
                      }
                    ]
                  },
                  "testCases": null,
                  "isAnyType": true,
                  "properties": [
                    {
                      "openApiType": "ErrorStatus",
                      "baseName": "status",
                      "complexType": "ErrorStatus",
                      "getter": "getStatus",
                      "setter": "setStatus",
                      "dataType": "ErrorStatus",
                      "datatypeWithEnum": "ErrorStatus",
                      "name": "status",
                      "defaultValue": "ErrorStatus.BadRequest",
                      "baseType": "ErrorStatus",
                      "example": "null",
                      "required": true,
                      "isEnumRef": true,
                      "isReadOnly": true,
                      "isOverridden": true,
                      "allowableValues": {
                        "enumVars": [
                          {
                            "name": "BadRequest",
                            "isString": true,
                            "value": "\"bad-request\""
                          },
                          {
                            "name": "Unauthorized",
                            "isString": true,
                            "value": "\"unauthorized\""
                          },
                          {
                            "name": "Forbidden",
                            "isString": true,
                            "value": "\"forbidden\""
                          },
                          {
                            "name": "NotFound",
                            "isString": true,
                            "value": "\"not-found\""
                          },
                          {
                            "name": "MethodNotAllowed",
                            "isString": true,
                            "value": "\"bad-method\""
                          },
                          {
                            "name": "Conflict",
                            "isString": true,
                            "value": "\"conflict\""
                          },
                          {
                            "name": "Gone",
                            "isString": true,
                            "value": "\"gone\""
                          },
                          {
                            "name": "Unprocessable",
                            "isString": true,
                            "value": "\"invalid-input\""
                          },
                          {
                            "name": "FailedDependency",
                            "isString": true,
                            "value": "\"failed-dependency\""
                          },
                          {
                            "name": "ServerError",
                            "isString": true,
                            "value": "\"server-error\""
                          }
                        ],
                        "values": [
                          "bad-request",
                          "unauthorized",
                          "forbidden",
                          "not-found",
                          "bad-method",
                          "conflict",
                          "gone",
                          "invalid-input",
                          "failed-dependency",
                          "server-error"
                        ]
                      },
                      "vendorExtensions": {
                        "x-enum-varnames": [
                          "BadRequest",
                          "Unauthorized",
                          "Forbidden",
                          "NotFound",
                          "MethodNotAllowed",
                          "Conflict",
                          "Gone",
                          "Unprocessable",
                          "FailedDependency",
                          "ServerError"
                        ]
                      },
                      "isInherited": true,
                      "nameInCamelCase": "status",
                      "nameInPascalCase": "Status",
                      "nameInSnakeCase": "STATUS",
                      "ref": "#/components/schemas/Error_Status"
                    },
                    {
                      "openApiType": "string",
                      "baseName": "message",
                      "getter": "getMessage",
                      "setter": "setMessage",
                      "dataType": "String",
                      "datatypeWithEnum": "String",
                      "name": "message",
                      "baseType": "String",
                      "example": "null",
                      "required": true,
                      "isPrimitiveType": true,
                      "isString": true,
                      "isOverridden": true,
                      "isInherited": true,
                      "nameInCamelCase": "message",
                      "nameInPascalCase": "Message",
                      "nameInSnakeCase": "MESSAGE"
                    }
                  ]
                },
                "explicitMapping": true
              },
              {
                "mappingName": "not-found",
                "modelName": "NotFoundError",
                "model": {
                  "parent": "APIError",
                  "parentSchema": "API_Error",
                  "interfaces": [
                    "APIError"
                  ],
                  "allOf": [
                    "APIError"
                  ],
                  "name": "Not_Found_Error",
                  "schemaName": "Not_Found_Error",
                  "classname": "NotFoundError",
                  "title": "Not Found Error",
                  "classVarName": "notFoundError",
                  "dataType": "APIError",
                  "classFilename": "NotFoundError",
                  "allMandatory": [
                    "status"
                  ],
                  "imports": [
                    "com.fasterxml.jackson.annotation.JsonProperty"
                  ],
                  "emptyVars": true,
                  "hasEnums": true,
                  "hasRequired": true,
                  "hasOptional": true,
                  "hasOnlyReadOnly": false,
                  "vendorExtensions": {
                    "x-discriminator-value": "not-found",
                    "x-has-data-class-body": true
                  },
                  "composedSchemas": {
                    "allOf": [
                      {
                        "openApiType": "APIError",
                        "baseName": "all_of_0",
                        "complexType": "APIError",
                        "getter": "getAllOf0",
                        "setter": "setAllOf0",
                        "dataType": "APIError",
                        "datatypeWithEnum": "APIError",
                        "name": "allOf0",
                        "baseType": "APIError",
                        "example": "null",
                        "isModel": true,
                        "nameInCamelCase": "allOf0",
                        "nameInPascalCase": "AllOf0",
                        "nameInSnakeCase": "ALL_OF0",
                        "hasSanitizedName": true,
                        "ref": "#/components/schemas/API_Error"
                      },
                      {
                        "openApiType": "Any",
                        "baseName": "all_of_1",
                        "getter": "getAllOf1",
                        "setter": "setAllOf1",
                        "dataType": "Any",
                        "datatypeWithEnum": "Any",
                        "name": "allOf1",
                        "baseType": "Any",
                        "example": "null",
                        "isAnyType": true,
                        "isNullable": true,
                        "nameInCamelCase": "allOf1",
                        "nameInPascalCase": "AllOf1",
                        "nameInSnakeCase": "ALL_OF1",
                        "hasSanitizedName": true
                      }
                    ]
                  },
                  "testCases": null,
                  "isAnyType": true,
                  "properties": [
                    {
                      "openApiType": "ErrorStatus",
                      "baseName": "status",
                      "complexType": "ErrorStatus",
                      "getter": "getStatus",
                      "setter": "setStatus",
                      "dataType": "ErrorStatus",
                      "datatypeWithEnum": "ErrorStatus",
                      "name": "status",
                      "defaultValue": "ErrorStatus.NotFound",
                      "baseType": "ErrorStatus",
                      "example": "null",
                      "required": true,
                      "isEnumRef": true,
                      "isReadOnly": true,
                      "isOverridden": true,
                      "allowableValues": {
                        "enumVars": [
                          {
                            "name": "BadRequest",
                            "isString": true,
                            "value": "\"bad-request\""
                          },
                          {
                            "name": "Unauthorized",
                            "isString": true,
                            "value": "\"unauthorized\""
                          },
                          {
                            "name": "Forbidden",
                            "isString": true,
                            "value": "\"forbidden\""
                          },
                          {
                            "name": "NotFound",
                            "isString": true,
                            "value": "\"not-found\""
                          },
                          {
                            "name": "MethodNotAllowed",
                            "isString": true,
                            "value": "\"bad-method\""
                          },
                          {
                            "name": "Conflict",
                            "isString": true,
                            "value": "\"conflict\""
                          },
                          {
                            "name": "Gone",
                            "isString": true,
                            "value": "\"gone\""
                          },
                          {
                            "name": "Unprocessable",
                            "isString": true,
                            "value": "\"invalid-input\""
                          },
                          {
                            "name": "FailedDependency",
                            "isString": true,
                            "value": "\"failed-dependency\""
                          },
                          {
                            "name": "ServerError",
                            "isString": true,
                            "value": "\"server-error\""
                          }
                        ],
                        "values": [
                          "bad-request",
                          "unauthorized",
                          "forbidden",
                          "not-found",
                          "bad-method",
                          "conflict",
                          "gone",
                          "invalid-input",
                          "failed-dependency",
                          "server-error"
                        ]
                      },
                      "vendorExtensions": {
                        "x-enum-varnames": [
                          "BadRequest",
                          "Unauthorized",
                          "Forbidden",
                          "NotFound",
                          "MethodNotAllowed",
                          "Conflict",
                          "Gone",
                          "Unprocessable",
                          "FailedDependency",
                          "ServerError"
                        ]
                      },
                      "isInherited": true,
                      "nameInCamelCase": "status",
                      "nameInPascalCase": "Status",
                      "nameInSnakeCase": "STATUS",
                      "ref": "#/components/schemas/Error_Status"
                    },
                    {
                      "openApiType": "string",
                      "baseName": "message",
                      "getter": "getMessage",
                      "setter": "setMessage",
                      "dataType": "String",
                      "datatypeWithEnum": "String",
                      "name": "message",
                      "baseType": "String",
                      "example": "null",
                      "isPrimitiveType": true,
                      "isString": true,
                      "isOverridden": true,
                      "isInherited": true,
                      "nameInCamelCase": "message",
                      "nameInPascalCase": "Message",
                      "nameInSnakeCase": "MESSAGE"
                    }
                  ]
                },
                "explicitMapping": true
              },
              {
                "mappingName": "server-error",
                "modelName": "InternalServerError",
                "model": {
                  "parent": "APIError",
                  "parentSchema": "API_Error",
                  "interfaces": [
                    "APIError"
                  ],
                  "allOf": [
                    "APIError"
                  ],
                  "name": "Internal_Server_Error",
                  "schemaName": "Internal_Server_Error",
                  "classname": "InternalServerError",
                  "title": "Internal Server Error",
                  "classVarName": "internalServerError",
                  "dataType": "APIError",
                  "classFilename": "InternalServerError",
                  "allMandatory": [
                    "requestId",
                    "status"
                  ],
                  "imports": [
                    "com.fasterxml.jackson.annotation.JsonProperty"
                  ],
                  "emptyVars": true,
                  "hasVars": true,
                  "hasEnums": true,
                  "hasRequired": true,
                  "hasOptional": true,
                  "hasOnlyReadOnly": false,
                  "vendorExtensions": {
                    "x-discriminator-value": "server-error",
                    "x-has-data-class-body": true
                  },
                  "composedSchemas": {
                    "allOf": [
                      {
                        "openApiType": "APIError",
                        "baseName": "all_of_0",
                        "complexType": "APIError",
                        "getter": "getAllOf0",
                        "setter": "setAllOf0",
                        "dataType": "APIError",
                        "datatypeWithEnum": "APIError",
                        "name": "allOf0",
                        "baseType": "APIError",
                        "example": "null",
                        "isModel": true,
                        "nameInCamelCase": "allOf0",
                        "nameInPascalCase": "AllOf0",
                        "nameInSnakeCase": "ALL_OF0",
                        "hasSanitizedName": true,
                        "ref": "#/components/schemas/API_Error"
                      }
                    ]
                  },
                  "testCases": null,
                  "isModel": true,
                  "properties": [
                    {
                      "openApiType": "ErrorStatus",
                      "baseName": "status",
                      "complexType": "ErrorStatus",
                      "getter": "getStatus",
                      "setter": "setStatus",
                      "dataType": "ErrorStatus",
                      "datatypeWithEnum": "ErrorStatus",
                      "name": "status",
                      "defaultValue": "ErrorStatus.ServerError",
                      "baseType": "ErrorStatus",
                      "example": "null",
                      "required": true,
                      "isEnumRef": true,
                      "isReadOnly": true,
                      "isOverridden": true,
                      "allowableValues": {
                        "enumVars": [
                          {
                            "name": "BadRequest",
                            "isString": true,
                            "value": "\"bad-request\""
                          },
                          {
                            "name": "Unauthorized",
                            "isString": true,
                            "value": "\"unauthorized\""
                          },
                          {
                            "name": "Forbidden",
                            "isString": true,
                            "value": "\"forbidden\""
                          },
                          {
                            "name": "NotFound",
                            "isString": true,
                            "value": "\"not-found\""
                          },
                          {
                            "name": "MethodNotAllowed",
                            "isString": true,
                            "value": "\"bad-method\""
                          },
                          {
                            "name": "Conflict",
                            "isString": true,
                            "value": "\"conflict\""
                          },
                          {
                            "name": "Gone",
                            "isString": true,
                            "value": "\"gone\""
                          },
                          {
                            "name": "Unprocessable",
                            "isString": true,
                            "value": "\"invalid-input\""
                          },
                          {
                            "name": "FailedDependency",
                            "isString": true,
                            "value": "\"failed-dependency\""
                          },
                          {
                            "name": "ServerError",
                            "isString": true,
                            "value": "\"server-error\""
                          }
                        ],
                        "values": [
                          "bad-request",
                          "unauthorized",
                          "forbidden",
                          "not-found",
                          "bad-method",
                          "conflict",
                          "gone",
                          "invalid-input",
                          "failed-dependency",
                          "server-error"
                        ]
                      },
                      "vendorExtensions": {
                        "x-enum-varnames": [
                          "BadRequest",
                          "Unauthorized",
                          "Forbidden",
                          "NotFound",
                          "MethodNotAllowed",
                          "Conflict",
                          "Gone",
                          "Unprocessable",
                          "FailedDependency",
                          "ServerError"
                        ]
                      },
                      "isInherited": true,
                      "nameInCamelCase": "status",
                      "nameInPascalCase": "Status",
                      "nameInSnakeCase": "STATUS",
                      "ref": "#/components/schemas/Error_Status"
                    },
                    {
                      "openApiType": "string",
                      "baseName": "message",
                      "getter": "getMessage",
                      "setter": "setMessage",
                      "dataType": "String",
                      "datatypeWithEnum": "String",
                      "name": "message",
                      "baseType": "String",
                      "example": "null",
                      "isPrimitiveType": true,
                      "isString": true,
                      "isOverridden": true,
                      "isInherited": true,
                      "nameInCamelCase": "message",
                      "nameInPascalCase": "Message",
                      "nameInSnakeCase": "MESSAGE"
                    }
                  ]
                },
                "explicitMapping": true
              },
              {
                "mappingName": "unauthorized",
                "modelName": "UnauthorizedRequestError",
                "model": {
                  "parent": "APIError",
                  "parentSchema": "API_Error",
                  "interfaces": [
                    "APIError"
                  ],
                  "allOf": [
                    "APIError"
                  ],
                  "name": "Unauthorized_Request_Error",
                  "schemaName": "Unauthorized_Request_Error",
                  "classname": "UnauthorizedRequestError",
                  "title": "Unauthorized Request Error",
                  "classVarName": "unauthorizedRequestError",
                  "dataType": "APIError",
                  "classFilename": "UnauthorizedRequestError",
                  "allMandatory": [
                    "status"
                  ],
                  "imports": [
                    "com.fasterxml.jackson.annotation.JsonProperty"
                  ],
                  "emptyVars": true,
                  "hasEnums": true,
                  "hasRequired": true,
                  "hasOptional": true,
                  "hasOnlyReadOnly": false,
                  "vendorExtensions": {
                    "x-discriminator-value": "unauthorized",
                    "x-has-data-class-body": true
                  },
                  "composedSchemas": {
                    "allOf": [
                      {
                        "openApiType": "APIError",
                        "baseName": "all_of_0",
                        "complexType": "APIError",
                        "getter": "getAllOf0",
                        "setter": "setAllOf0",
                        "dataType": "APIError",
                        "datatypeWithEnum": "APIError",
                        "name": "allOf0",
                        "baseType": "APIError",
                        "example": "null",
                        "isModel": true,
                        "nameInCamelCase": "allOf0",
                        "nameInPascalCase": "AllOf0",
                        "nameInSnakeCase": "ALL_OF0",
                        "hasSanitizedName": true,
                        "ref": "#/components/schemas/API_Error"
                      },
                      {
                        "openApiType": "Any",
                        "baseName": "all_of_1",
                        "getter": "getAllOf1",
                        "setter": "setAllOf1",
                        "dataType": "Any",
                        "datatypeWithEnum": "Any",
                        "name": "allOf1",
                        "baseType": "Any",
                        "example": "null",
                        "isAnyType": true,
                        "isNullable": true,
                        "nameInCamelCase": "allOf1",
                        "nameInPascalCase": "AllOf1",
                        "nameInSnakeCase": "ALL_OF1",
                        "hasSanitizedName": true
                      }
                    ]
                  },
                  "testCases": null,
                  "isAnyType": true,
                  "properties": [
                    {
                      "openApiType": "ErrorStatus",
                      "baseName": "status",
                      "complexType": "ErrorStatus",
                      "getter": "getStatus",
                      "setter": "setStatus",
                      "dataType": "ErrorStatus",
                      "datatypeWithEnum": "ErrorStatus",
                      "name": "status",
                      "defaultValue": "ErrorStatus.Unauthorized",
                      "baseType": "ErrorStatus",
                      "example": "null",
                      "required": true,
                      "isEnumRef": true,
                      "isReadOnly": true,
                      "isOverridden": true,
                      "allowableValues": {
                        "enumVars": [
                          {
                            "name": "BadRequest",
                            "isString": true,
                            "value": "\"bad-request\""
                          },
                          {
                            "name": "Unauthorized",
                            "isString": true,
                            "value": "\"unauthorized\""
                          },
                          {
                            "name": "Forbidden",
                            "isString": true,
                            "value": "\"forbidden\""
                          },
                          {
                            "name": "NotFound",
                            "isString": true,
                            "value": "\"not-found\""
                          },
                          {
                            "name": "MethodNotAllowed",
                            "isString": true,
                            "value": "\"bad-method\""
                          },
                          {
                            "name": "Conflict",
                            "isString": true,
                            "value": "\"conflict\""
                          },
                          {
                            "name": "Gone",
                            "isString": true,
                            "value": "\"gone\""
                          },
                          {
                            "name": "Unprocessable",
                            "isString": true,
                            "value": "\"invalid-input\""
                          },
                          {
                            "name": "FailedDependency",
                            "isString": true,
                            "value": "\"failed-dependency\""
                          },
                          {
                            "name": "ServerError",
                            "isString": true,
                            "value": "\"server-error\""
                          }
                        ],
                        "values": [
                          "bad-request",
                          "unauthorized",
                          "forbidden",
                          "not-found",
                          "bad-method",
                          "conflict",
                          "gone",
                          "invalid-input",
                          "failed-dependency",
                          "server-error"
                        ]
                      },
                      "vendorExtensions": {
                        "x-enum-varnames": [
                          "BadRequest",
                          "Unauthorized",
                          "Forbidden",
                          "NotFound",
                          "MethodNotAllowed",
                          "Conflict",
                          "Gone",
                          "Unprocessable",
                          "FailedDependency",
                          "ServerError"
                        ]
                      },
                      "isInherited": true,
                      "nameInCamelCase": "status",
                      "nameInPascalCase": "Status",
                      "nameInSnakeCase": "STATUS",
                      "ref": "#/components/schemas/Error_Status"
                    },
                    {
                      "openApiType": "string",
                      "baseName": "message",
                      "getter": "getMessage",
                      "setter": "setMessage",
                      "dataType": "String",
                      "datatypeWithEnum": "String",
                      "name": "message",
                      "baseType": "String",
                      "example": "null",
                      "isPrimitiveType": true,
                      "isString": true,
                      "isOverridden": true,
                      "isInherited": true,
                      "nameInCamelCase": "message",
                      "nameInPascalCase": "Message",
                      "nameInSnakeCase": "MESSAGE"
                    }
                  ]
                },
                "explicitMapping": true
              }
            ]
          },
          "allMandatory": [
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty",
            "com.fasterxml.jackson.annotation.JsonSubTypes",
            "com.fasterxml.jackson.annotation.JsonTypeInfo",
            "com.fasterxml.jackson.annotation.JsonIgnoreProperties"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasChildren": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "x-has-data-class-body": true
          },
          "testCases": null,
          "isModel": true,
          "hasDiscriminatorWithNonEmptyMapping": true,
          "properties": [
            {
              "openApiType": "ErrorStatus",
              "baseName": "status",
              "complexType": "ErrorStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "ErrorStatus",
              "datatypeWithEnum": "ErrorStatus",
              "name": "status",
              "baseType": "ErrorStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "isDiscriminator": true,
              "isOverridden": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "BadRequest",
                    "isString": true,
                    "value": "\"bad-request\""
                  },
                  {
                    "name": "Unauthorized",
                    "isString": true,
                    "value": "\"unauthorized\""
                  },
                  {
                    "name": "Forbidden",
                    "isString": true,
                    "value": "\"forbidden\""
                  },
                  {
                    "name": "NotFound",
                    "isString": true,
                    "value": "\"not-found\""
                  },
                  {
                    "name": "MethodNotAllowed",
                    "isString": true,
                    "value": "\"bad-method\""
                  },
                  {
                    "name": "Conflict",
                    "isString": true,
                    "value": "\"conflict\""
                  },
                  {
                    "name": "Gone",
                    "isString": true,
                    "value": "\"gone\""
                  },
                  {
                    "name": "Unprocessable",
                    "isString": true,
                    "value": "\"invalid-input\""
                  },
                  {
                    "name": "FailedDependency",
                    "isString": true,
                    "value": "\"failed-dependency\""
                  },
                  {
                    "name": "ServerError",
                    "isString": true,
                    "value": "\"server-error\""
                  }
                ],
                "values": [
                  "bad-request",
                  "unauthorized",
                  "forbidden",
                  "not-found",
                  "bad-method",
                  "conflict",
                  "gone",
                  "invalid-input",
                  "failed-dependency",
                  "server-error"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "BadRequest",
                  "Unauthorized",
                  "Forbidden",
                  "NotFound",
                  "MethodNotAllowed",
                  "Conflict",
                  "Gone",
                  "Unprocessable",
                  "FailedDependency",
                  "ServerError"
                ]
              },
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Error_Status"
            },
            {
              "openApiType": "string",
              "baseName": "message",
              "getter": "getMessage",
              "setter": "setMessage",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "message",
              "baseType": "String",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": true,
              "nameInCamelCase": "message",
              "nameInPascalCase": "Message",
              "nameInSnakeCase": "MESSAGE"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "APIError",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Bad_Request_Error": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.BadRequestError",
        "model": {
          "parent": "APIError",
          "parentSchema": "API_Error",
          "interfaces": [
            "APIError"
          ],
          "allOf": [
            "APIError"
          ],
          "name": "Bad_Request_Error",
          "schemaName": "Bad_Request_Error",
          "classname": "BadRequestError",
          "title": "Bad Request Error",
          "classVarName": "badRequestError",
          "dataType": "APIError",
          "classFilename": "BadRequestError",
          "allMandatory": [
            "message",
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "emptyVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "x-discriminator-value": "bad-request",
            "x-has-data-class-body": true
          },
          "composedSchemas": {
            "allOf": [
              {
                "openApiType": "APIError",
                "baseName": "all_of_0",
                "complexType": "APIError",
                "getter": "getAllOf0",
                "setter": "setAllOf0",
                "dataType": "APIError",
                "datatypeWithEnum": "APIError",
                "name": "allOf0",
                "baseType": "APIError",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "allOf0",
                "nameInPascalCase": "AllOf0",
                "nameInSnakeCase": "ALL_OF0",
                "hasSanitizedName": true,
                "ref": "#/components/schemas/API_Error"
              },
              {
                "openApiType": "Any",
                "baseName": "all_of_1",
                "getter": "getAllOf1",
                "setter": "setAllOf1",
                "dataType": "Any",
                "datatypeWithEnum": "Any",
                "name": "allOf1",
                "baseType": "Any",
                "example": "null",
                "isAnyType": true,
                "isNullable": true,
                "nameInCamelCase": "allOf1",
                "nameInPascalCase": "AllOf1",
                "nameInSnakeCase": "ALL_OF1",
                "hasSanitizedName": true
              }
            ]
          },
          "testCases": null,
          "isAnyType": true,
          "properties": [
            {
              "openApiType": "ErrorStatus",
              "baseName": "status",
              "complexType": "ErrorStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "ErrorStatus",
              "datatypeWithEnum": "ErrorStatus",
              "name": "status",
              "defaultValue": "ErrorStatus.BadRequest",
              "baseType": "ErrorStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "isReadOnly": true,
              "isOverridden": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "BadRequest",
                    "isString": true,
                    "value": "\"bad-request\""
                  },
                  {
                    "name": "Unauthorized",
                    "isString": true,
                    "value": "\"unauthorized\""
                  },
                  {
                    "name": "Forbidden",
                    "isString": true,
                    "value": "\"forbidden\""
                  },
                  {
                    "name": "NotFound",
                    "isString": true,
                    "value": "\"not-found\""
                  },
                  {
                    "name": "MethodNotAllowed",
                    "isString": true,
                    "value": "\"bad-method\""
                  },
                  {
                    "name": "Conflict",
                    "isString": true,
                    "value": "\"conflict\""
                  },
                  {
                    "name": "Gone",
                    "isString": true,
                    "value": "\"gone\""
                  },
                  {
                    "name": "Unprocessable",
                    "isString": true,
                    "value": "\"invalid-input\""
                  },
                  {
                    "name": "FailedDependency",
                    "isString": true,
                    "value": "\"failed-dependency\""
                  },
                  {
                    "name": "ServerError",
                    "isString": true,
                    "value": "\"server-error\""
                  }
                ],
                "values": [
                  "bad-request",
                  "unauthorized",
                  "forbidden",
                  "not-found",
                  "bad-method",
                  "conflict",
                  "gone",
                  "invalid-input",
                  "failed-dependency",
                  "server-error"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "BadRequest",
                  "Unauthorized",
                  "Forbidden",
                  "NotFound",
                  "MethodNotAllowed",
                  "Conflict",
                  "Gone",
                  "Unprocessable",
                  "FailedDependency",
                  "ServerError"
                ]
              },
              "isInherited": true,
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Error_Status"
            },
            {
              "openApiType": "string",
              "baseName": "message",
              "getter": "getMessage",
              "setter": "setMessage",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "message",
              "baseType": "String",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": true,
              "isInherited": true,
              "nameInCamelCase": "message",
              "nameInPascalCase": "Message",
              "nameInSnakeCase": "MESSAGE"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "BadRequestError",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Base_Dataset_Metadata": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.BaseDatasetMetadata",
        "model": {
          "name": "Base_Dataset_Metadata",
          "schemaName": "Base_Dataset_Metadata",
          "classname": "BaseDatasetMetadata",
          "title": "Base Dataset Metadata",
          "classVarName": "baseDatasetMetadata",
          "dataType": "Any",
          "classFilename": "BaseDatasetMetadata",
          "allMandatory": [
            "name",
            "origin",
            "summary"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "name",
              "getter": "getName",
              "setter": "setName",
              "description": "User-provided name for the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "name",
              "baseType": "String",
              "unescapedDescription": "User-provided name for the dataset.",
              "maxLength": 1024,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "name",
              "nameInPascalCase": "Name",
              "nameInSnakeCase": "NAME"
            },
            {
              "openApiType": "string",
              "baseName": "summary",
              "getter": "getSummary",
              "setter": "setSummary",
              "description": "Brief summary of the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "summary",
              "baseType": "String",
              "unescapedDescription": "Brief summary of the dataset.",
              "maxLength": 4000,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "summary",
              "nameInPascalCase": "Summary",
              "nameInSnakeCase": "SUMMARY"
            },
            {
              "openApiType": "string",
              "baseName": "origin",
              "getter": "getOrigin",
              "setter": "setOrigin",
              "description": "String representing the origin of the dataset. Examples include `direct-upload`, `nephele`, or `galaxy`.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "origin",
              "baseType": "String",
              "unescapedDescription": "String representing the origin of the dataset. Examples include\n`direct-upload`, `nephele`, or `galaxy`.",
              "maxLength": 256,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "origin",
              "nameInPascalCase": "Origin",
              "nameInSnakeCase": "ORIGIN"
            },
            {
              "openApiType": "array",
              "baseName": "installTargets",
              "complexType": "InstallTargetID",
              "getter": "getInstallTargets",
              "setter": "setInstallTargets",
              "dataType": "Set<InstallTargetID>",
              "datatypeWithEnum": "Set<InstallTargetID>",
              "name": "installTargets",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "mostInnerItems": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "hasValidation": true,
              "nameInCamelCase": "installTargets",
              "nameInPascalCase": "InstallTargets",
              "nameInSnakeCase": "INSTALL_TARGETS",
              "minItems": 1,
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "string",
              "baseName": "description",
              "getter": "getDescription",
              "setter": "setDescription",
              "description": "Longform description of the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "description",
              "baseType": "String",
              "unescapedDescription": "Longform description of the dataset.",
              "maxLength": 52428800,
              "minLength": 1,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "description",
              "nameInPascalCase": "Description",
              "nameInSnakeCase": "DESCRIPTION"
            },
            {
              "openApiType": "string",
              "baseName": "shortName",
              "getter": "getShortName",
              "setter": "setShortName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "shortName",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "shortName",
              "nameInPascalCase": "ShortName",
              "nameInSnakeCase": "SHORT_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "shortAttribution",
              "getter": "getShortAttribution",
              "setter": "setShortAttribution",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "shortAttribution",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "shortAttribution",
              "nameInPascalCase": "ShortAttribution",
              "nameInSnakeCase": "SHORT_ATTRIBUTION"
            },
            {
              "openApiType": "object",
              "baseName": "properties",
              "getter": "getProperties",
              "setter": "setProperties",
              "dataType": "Any",
              "datatypeWithEnum": "Any",
              "name": "properties",
              "baseType": "Any",
              "example": "null",
              "isFreeFormObject": true,
              "nameInCamelCase": "properties",
              "nameInPascalCase": "Properties",
              "nameInSnakeCase": "PROPERTIES"
            },
            {
              "openApiType": "array",
              "baseName": "dependencies",
              "complexType": "DatasetDependency",
              "getter": "getDependencies",
              "setter": "setDependencies",
              "dataType": "Set<DatasetDependency>",
              "datatypeWithEnum": "Set<DatasetDependency>",
              "name": "dependencies",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "DatasetDependency",
                "baseName": "dependencies",
                "complexType": "DatasetDependency",
                "getter": "getDependencies",
                "setter": "setDependencies",
                "dataType": "DatasetDependency",
                "datatypeWithEnum": "DatasetDependency",
                "name": "dependencies",
                "baseType": "DatasetDependency",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "dependencies",
                "nameInPascalCase": "Dependencies",
                "nameInSnakeCase": "DEPENDENCIES",
                "ref": "#/components/schemas/Dataset_Dependency"
              },
              "mostInnerItems": {
                "openApiType": "DatasetDependency",
                "baseName": "dependencies",
                "complexType": "DatasetDependency",
                "getter": "getDependencies",
                "setter": "setDependencies",
                "dataType": "DatasetDependency",
                "datatypeWithEnum": "DatasetDependency",
                "name": "dependencies",
                "baseType": "DatasetDependency",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "dependencies",
                "nameInPascalCase": "Dependencies",
                "nameInSnakeCase": "DEPENDENCIES",
                "ref": "#/components/schemas/Dataset_Dependency"
              },
              "hasValidation": true,
              "nameInCamelCase": "dependencies",
              "nameInPascalCase": "Dependencies",
              "nameInSnakeCase": "DEPENDENCIES",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "contacts",
              "complexType": "DatasetContact",
              "getter": "getContacts",
              "setter": "setContacts",
              "dataType": "Set<DatasetContact>",
              "datatypeWithEnum": "Set<DatasetContact>",
              "name": "contacts",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "DatasetContact",
                "baseName": "contacts",
                "complexType": "DatasetContact",
                "getter": "getContacts",
                "setter": "setContacts",
                "dataType": "DatasetContact",
                "datatypeWithEnum": "DatasetContact",
                "name": "contacts",
                "baseType": "DatasetContact",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "contacts",
                "nameInPascalCase": "Contacts",
                "nameInSnakeCase": "CONTACTS",
                "ref": "#/components/schemas/Dataset_Contact"
              },
              "mostInnerItems": {
                "openApiType": "DatasetContact",
                "baseName": "contacts",
                "complexType": "DatasetContact",
                "getter": "getContacts",
                "setter": "setContacts",
                "dataType": "DatasetContact",
                "datatypeWithEnum": "DatasetContact",
                "name": "contacts",
                "baseType": "DatasetContact",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "contacts",
                "nameInPascalCase": "Contacts",
                "nameInSnakeCase": "CONTACTS",
                "ref": "#/components/schemas/Dataset_Contact"
              },
              "hasValidation": true,
              "nameInCamelCase": "contacts",
              "nameInPascalCase": "Contacts",
              "nameInSnakeCase": "CONTACTS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "hyperlinks",
              "complexType": "DatasetHyperlink",
              "getter": "getHyperlinks",
              "setter": "setHyperlinks",
              "dataType": "Set<DatasetHyperlink>",
              "datatypeWithEnum": "Set<DatasetHyperlink>",
              "name": "hyperlinks",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "DatasetHyperlink",
                "baseName": "hyperlinks",
                "complexType": "DatasetHyperlink",
                "getter": "getHyperlinks",
                "setter": "setHyperlinks",
                "dataType": "DatasetHyperlink",
                "datatypeWithEnum": "DatasetHyperlink",
                "name": "hyperlinks",
                "baseType": "DatasetHyperlink",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "hyperlinks",
                "nameInPascalCase": "Hyperlinks",
                "nameInSnakeCase": "HYPERLINKS",
                "ref": "#/components/schemas/Dataset_Hyperlink"
              },
              "mostInnerItems": {
                "openApiType": "DatasetHyperlink",
                "baseName": "hyperlinks",
                "complexType": "DatasetHyperlink",
                "getter": "getHyperlinks",
                "setter": "setHyperlinks",
                "dataType": "DatasetHyperlink",
                "datatypeWithEnum": "DatasetHyperlink",
                "name": "hyperlinks",
                "baseType": "DatasetHyperlink",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "hyperlinks",
                "nameInPascalCase": "Hyperlinks",
                "nameInSnakeCase": "HYPERLINKS",
                "ref": "#/components/schemas/Dataset_Hyperlink"
              },
              "hasValidation": true,
              "nameInCamelCase": "hyperlinks",
              "nameInPascalCase": "Hyperlinks",
              "nameInSnakeCase": "HYPERLINKS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "organisms",
              "getter": "getOrganisms",
              "setter": "setOrganisms",
              "dataType": "Set<String>",
              "datatypeWithEnum": "Set<String>",
              "name": "organisms",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isPrimitiveType": true,
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "string",
                "baseName": "organisms",
                "getter": "getOrganisms",
                "setter": "setOrganisms",
                "dataType": "String",
                "datatypeWithEnum": "String",
                "name": "organisms",
                "baseType": "String",
                "maxLength": 200,
                "minLength": 3,
                "example": "null",
                "isPrimitiveType": true,
                "isString": true,
                "hasValidation": true,
                "nameInCamelCase": "organisms",
                "nameInPascalCase": "Organisms",
                "nameInSnakeCase": "ORGANISMS"
              },
              "mostInnerItems": {
                "openApiType": "string",
                "baseName": "organisms",
                "getter": "getOrganisms",
                "setter": "setOrganisms",
                "dataType": "String",
                "datatypeWithEnum": "String",
                "name": "organisms",
                "baseType": "String",
                "maxLength": 200,
                "minLength": 3,
                "example": "null",
                "isPrimitiveType": true,
                "isString": true,
                "hasValidation": true,
                "nameInCamelCase": "organisms",
                "nameInPascalCase": "Organisms",
                "nameInSnakeCase": "ORGANISMS"
              },
              "hasValidation": true,
              "nameInCamelCase": "organisms",
              "nameInPascalCase": "Organisms",
              "nameInSnakeCase": "ORGANISMS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "publications",
              "complexType": "DatasetPublication",
              "getter": "getPublications",
              "setter": "setPublications",
              "dataType": "Set<DatasetPublication>",
              "datatypeWithEnum": "Set<DatasetPublication>",
              "name": "publications",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "DatasetPublication",
                "baseName": "publications",
                "complexType": "DatasetPublication",
                "getter": "getPublications",
                "setter": "setPublications",
                "dataType": "DatasetPublication",
                "datatypeWithEnum": "DatasetPublication",
                "name": "publications",
                "baseType": "DatasetPublication",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "publications",
                "nameInPascalCase": "Publications",
                "nameInSnakeCase": "PUBLICATIONS",
                "ref": "#/components/schemas/Dataset_Publication"
              },
              "mostInnerItems": {
                "openApiType": "DatasetPublication",
                "baseName": "publications",
                "complexType": "DatasetPublication",
                "getter": "getPublications",
                "setter": "setPublications",
                "dataType": "DatasetPublication",
                "datatypeWithEnum": "DatasetPublication",
                "name": "publications",
                "baseType": "DatasetPublication",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "publications",
                "nameInPascalCase": "Publications",
                "nameInSnakeCase": "PUBLICATIONS",
                "ref": "#/components/schemas/Dataset_Publication"
              },
              "hasValidation": true,
              "nameInCamelCase": "publications",
              "nameInPascalCase": "Publications",
              "nameInSnakeCase": "PUBLICATIONS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "BaseDatasetMetadata",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "createDataset_201_response": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.CreateDataset201Response",
        "model": {
          "name": "createDataset_201_response",
          "schemaName": "createDataset_201_response",
          "classname": "CreateDataset201Response",
          "classVarName": "createDataset201Response",
          "dataType": "Any",
          "classFilename": "CreateDataset201Response",
          "allMandatory": [
            "datasetId"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "datasetId",
              "getter": "getDatasetId",
              "setter": "setDatasetId",
              "description": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "datasetId",
              "baseType": "String",
              "title": "Dataset ID",
              "unescapedDescription": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "maxLength": 16,
              "minLength": 11,
              "pattern": "^\\\\w{11,16}(?:\\\\.\\\\d+)?$",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "datasetId",
              "nameInPascalCase": "DatasetId",
              "nameInSnakeCase": "DATASET_ID"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "CreateDataset201Response",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Data_Type_Request_Values": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DataTypeRequestValues",
        "model": {
          "name": "Data_Type_Request_Values",
          "schemaName": "Data_Type_Request_Values",
          "classname": "DataTypeRequestValues",
          "title": "Data Type Request Values",
          "classVarName": "dataTypeRequestValues",
          "dataType": "Any",
          "classFilename": "DataTypeRequestValues",
          "allMandatory": [
            "name",
            "version"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "name",
              "getter": "getName",
              "setter": "setName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "name",
              "baseType": "String",
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "name",
              "nameInPascalCase": "Name",
              "nameInSnakeCase": "NAME"
            },
            {
              "openApiType": "string",
              "baseName": "version",
              "getter": "getVersion",
              "setter": "setVersion",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "version",
              "baseType": "String",
              "minLength": 1,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "version",
              "nameInPascalCase": "Version",
              "nameInSnakeCase": "VERSION"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DataTypeRequestValues",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Contact": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetContact",
        "model": {
          "name": "Dataset_Contact",
          "schemaName": "Dataset_Contact",
          "classname": "DatasetContact",
          "title": "Dataset Contact",
          "classVarName": "datasetContact",
          "dataType": "Any",
          "classFilename": "DatasetContact",
          "allMandatory": [
            "affiliation",
            "name"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "name",
              "getter": "getName",
              "setter": "setName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "name",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "name",
              "nameInPascalCase": "Name",
              "nameInSnakeCase": "NAME"
            },
            {
              "openApiType": "string",
              "baseName": "affiliation",
              "getter": "getAffiliation",
              "setter": "setAffiliation",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "affiliation",
              "baseType": "String",
              "maxLength": 4000,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "affiliation",
              "nameInPascalCase": "Affiliation",
              "nameInSnakeCase": "AFFILIATION"
            },
            {
              "openApiType": "boolean",
              "baseName": "isPrimary",
              "getter": "getIsPrimary",
              "setter": "setIsPrimary",
              "dataType": "Boolean",
              "datatypeWithEnum": "Boolean",
              "name": "isPrimary",
              "defaultValue": "false",
              "baseType": "Boolean",
              "example": "null",
              "isPrimitiveType": true,
              "isBoolean": true,
              "nameInCamelCase": "isPrimary",
              "nameInPascalCase": "IsPrimary",
              "nameInSnakeCase": "IS_PRIMARY"
            },
            {
              "openApiType": "string",
              "baseName": "email",
              "getter": "getEmail",
              "setter": "setEmail",
              "description": "**IMPORTANT**: Required if `isPrimary == true`.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "email",
              "baseType": "String",
              "unescapedDescription": "**IMPORTANT**: Required if `isPrimary == true`.",
              "maxLength": 4000,
              "minLength": 5,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "email",
              "nameInPascalCase": "Email",
              "nameInSnakeCase": "EMAIL"
            },
            {
              "openApiType": "string",
              "baseName": "city",
              "getter": "getCity",
              "setter": "setCity",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "city",
              "baseType": "String",
              "maxLength": 200,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "city",
              "nameInPascalCase": "City",
              "nameInSnakeCase": "CITY"
            },
            {
              "openApiType": "string",
              "baseName": "state",
              "getter": "getState",
              "setter": "setState",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "state",
              "baseType": "String",
              "maxLength": 200,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "state",
              "nameInPascalCase": "State",
              "nameInSnakeCase": "STATE"
            },
            {
              "openApiType": "string",
              "baseName": "country",
              "getter": "getCountry",
              "setter": "setCountry",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "country",
              "baseType": "String",
              "maxLength": 200,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "country",
              "nameInPascalCase": "Country",
              "nameInSnakeCase": "COUNTRY"
            },
            {
              "openApiType": "string",
              "baseName": "address",
              "getter": "getAddress",
              "setter": "setAddress",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "address",
              "baseType": "String",
              "maxLength": 1000,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "address",
              "nameInPascalCase": "Address",
              "nameInSnakeCase": "ADDRESS"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetContact",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Dependency": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetDependency",
        "model": {
          "name": "Dataset_Dependency",
          "schemaName": "Dataset_Dependency",
          "classname": "DatasetDependency",
          "title": "Dataset Dependency",
          "classVarName": "datasetDependency",
          "dataType": "Any",
          "classFilename": "DatasetDependency",
          "allMandatory": [
            "resourceDisplayName",
            "resourceIdentifier",
            "resourceVersion"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "resourceIdentifier",
              "getter": "getResourceIdentifier",
              "setter": "setResourceIdentifier",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "resourceIdentifier",
              "baseType": "String",
              "maxLength": 50,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "resourceIdentifier",
              "nameInPascalCase": "ResourceIdentifier",
              "nameInSnakeCase": "RESOURCE_IDENTIFIER"
            },
            {
              "openApiType": "string",
              "baseName": "resourceDisplayName",
              "getter": "getResourceDisplayName",
              "setter": "setResourceDisplayName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "resourceDisplayName",
              "baseType": "String",
              "maxLength": 100,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "resourceDisplayName",
              "nameInPascalCase": "ResourceDisplayName",
              "nameInSnakeCase": "RESOURCE_DISPLAY_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "resourceVersion",
              "getter": "getResourceVersion",
              "setter": "setResourceVersion",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "resourceVersion",
              "baseType": "String",
              "maxLength": 50,
              "minLength": 1,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "resourceVersion",
              "nameInPascalCase": "ResourceVersion",
              "nameInSnakeCase": "RESOURCE_VERSION"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetDependency",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Get_Response": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetGetResponse",
        "model": {
          "interfaces": [
            "BaseDatasetMetadata"
          ],
          "allOf": [
            "BaseDatasetMetadata"
          ],
          "name": "Dataset_Get_Response",
          "schemaName": "Dataset_Get_Response",
          "classname": "DatasetGetResponse",
          "title": "Dataset Get Response",
          "description": "Details about a singular dataset.",
          "classVarName": "datasetGetResponse",
          "dataType": "BaseDatasetMetadata",
          "classFilename": "DatasetGetResponse",
          "unescapedDescription": "Details about a singular dataset.",
          "allMandatory": [
            "created",
            "datasetId",
            "datasetType",
            "name",
            "origin",
            "owner",
            "summary",
            "visibility"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty",
            "com.fasterxml.jackson.annotation.JsonFormat",
            "java.net.URI",
            "java.time.OffsetDateTime"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "composedSchemas": {
            "allOf": [
              {
                "openApiType": "BaseDatasetMetadata",
                "baseName": "all_of_0",
                "complexType": "BaseDatasetMetadata",
                "getter": "getAllOf0",
                "setter": "setAllOf0",
                "dataType": "BaseDatasetMetadata",
                "datatypeWithEnum": "BaseDatasetMetadata",
                "name": "allOf0",
                "baseType": "BaseDatasetMetadata",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "allOf0",
                "nameInPascalCase": "AllOf0",
                "nameInSnakeCase": "ALL_OF0",
                "hasSanitizedName": true,
                "ref": "#/components/schemas/Base_Dataset_Metadata"
              }
            ]
          },
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "name",
              "getter": "getName",
              "setter": "setName",
              "description": "User-provided name for the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "name",
              "baseType": "String",
              "unescapedDescription": "User-provided name for the dataset.",
              "maxLength": 1024,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": false,
              "hasValidation": true,
              "nameInCamelCase": "name",
              "nameInPascalCase": "Name",
              "nameInSnakeCase": "NAME"
            },
            {
              "openApiType": "string",
              "baseName": "summary",
              "getter": "getSummary",
              "setter": "setSummary",
              "description": "Brief summary of the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "summary",
              "baseType": "String",
              "unescapedDescription": "Brief summary of the dataset.",
              "maxLength": 4000,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": false,
              "hasValidation": true,
              "nameInCamelCase": "summary",
              "nameInPascalCase": "Summary",
              "nameInSnakeCase": "SUMMARY"
            },
            {
              "openApiType": "string",
              "baseName": "origin",
              "getter": "getOrigin",
              "setter": "setOrigin",
              "description": "String representing the origin of the dataset. Examples include `direct-upload`, `nephele`, or `galaxy`.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "origin",
              "baseType": "String",
              "unescapedDescription": "String representing the origin of the dataset. Examples include\n`direct-upload`, `nephele`, or `galaxy`.",
              "maxLength": 256,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": false,
              "hasValidation": true,
              "nameInCamelCase": "origin",
              "nameInPascalCase": "Origin",
              "nameInSnakeCase": "ORIGIN"
            },
            {
              "openApiType": "array",
              "baseName": "installTargets",
              "complexType": "InstallTargetID",
              "getter": "getInstallTargets",
              "setter": "setInstallTargets",
              "dataType": "Set<InstallTargetID>",
              "datatypeWithEnum": "Set<InstallTargetID>",
              "name": "installTargets",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "isOverridden": false,
              "items": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "mostInnerItems": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "hasValidation": true,
              "nameInCamelCase": "installTargets",
              "nameInPascalCase": "InstallTargets",
              "nameInSnakeCase": "INSTALL_TARGETS",
              "minItems": 1,
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "string",
              "baseName": "description",
              "getter": "getDescription",
              "setter": "setDescription",
              "description": "Longform description of the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "description",
              "baseType": "String",
              "unescapedDescription": "Longform description of the dataset.",
              "maxLength": 52428800,
              "minLength": 1,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": false,
              "hasValidation": true,
              "nameInCamelCase": "description",
              "nameInPascalCase": "Description",
              "nameInSnakeCase": "DESCRIPTION"
            },
            {
              "openApiType": "string",
              "baseName": "shortName",
              "getter": "getShortName",
              "setter": "setShortName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "shortName",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": false,
              "hasValidation": true,
              "nameInCamelCase": "shortName",
              "nameInPascalCase": "ShortName",
              "nameInSnakeCase": "SHORT_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "shortAttribution",
              "getter": "getShortAttribution",
              "setter": "setShortAttribution",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "shortAttribution",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": false,
              "hasValidation": true,
              "nameInCamelCase": "shortAttribution",
              "nameInPascalCase": "ShortAttribution",
              "nameInSnakeCase": "SHORT_ATTRIBUTION"
            },
            {
              "openApiType": "object",
              "baseName": "properties",
              "getter": "getProperties",
              "setter": "setProperties",
              "dataType": "Any",
              "datatypeWithEnum": "Any",
              "name": "properties",
              "baseType": "Any",
              "example": "null",
              "isFreeFormObject": true,
              "isOverridden": false,
              "nameInCamelCase": "properties",
              "nameInPascalCase": "Properties",
              "nameInSnakeCase": "PROPERTIES"
            },
            {
              "openApiType": "array",
              "baseName": "dependencies",
              "complexType": "DatasetDependency",
              "getter": "getDependencies",
              "setter": "setDependencies",
              "dataType": "Set<DatasetDependency>",
              "datatypeWithEnum": "Set<DatasetDependency>",
              "name": "dependencies",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "isOverridden": false,
              "items": {
                "openApiType": "DatasetDependency",
                "baseName": "dependencies",
                "complexType": "DatasetDependency",
                "getter": "getDependencies",
                "setter": "setDependencies",
                "dataType": "DatasetDependency",
                "datatypeWithEnum": "DatasetDependency",
                "name": "dependencies",
                "baseType": "DatasetDependency",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "dependencies",
                "nameInPascalCase": "Dependencies",
                "nameInSnakeCase": "DEPENDENCIES",
                "ref": "#/components/schemas/Dataset_Dependency"
              },
              "mostInnerItems": {
                "openApiType": "DatasetDependency",
                "baseName": "dependencies",
                "complexType": "DatasetDependency",
                "getter": "getDependencies",
                "setter": "setDependencies",
                "dataType": "DatasetDependency",
                "datatypeWithEnum": "DatasetDependency",
                "name": "dependencies",
                "baseType": "DatasetDependency",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "dependencies",
                "nameInPascalCase": "Dependencies",
                "nameInSnakeCase": "DEPENDENCIES",
                "ref": "#/components/schemas/Dataset_Dependency"
              },
              "hasValidation": true,
              "nameInCamelCase": "dependencies",
              "nameInPascalCase": "Dependencies",
              "nameInSnakeCase": "DEPENDENCIES",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "contacts",
              "complexType": "DatasetContact",
              "getter": "getContacts",
              "setter": "setContacts",
              "dataType": "Set<DatasetContact>",
              "datatypeWithEnum": "Set<DatasetContact>",
              "name": "contacts",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "isOverridden": false,
              "items": {
                "openApiType": "DatasetContact",
                "baseName": "contacts",
                "complexType": "DatasetContact",
                "getter": "getContacts",
                "setter": "setContacts",
                "dataType": "DatasetContact",
                "datatypeWithEnum": "DatasetContact",
                "name": "contacts",
                "baseType": "DatasetContact",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "contacts",
                "nameInPascalCase": "Contacts",
                "nameInSnakeCase": "CONTACTS",
                "ref": "#/components/schemas/Dataset_Contact"
              },
              "mostInnerItems": {
                "openApiType": "DatasetContact",
                "baseName": "contacts",
                "complexType": "DatasetContact",
                "getter": "getContacts",
                "setter": "setContacts",
                "dataType": "DatasetContact",
                "datatypeWithEnum": "DatasetContact",
                "name": "contacts",
                "baseType": "DatasetContact",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "contacts",
                "nameInPascalCase": "Contacts",
                "nameInSnakeCase": "CONTACTS",
                "ref": "#/components/schemas/Dataset_Contact"
              },
              "hasValidation": true,
              "nameInCamelCase": "contacts",
              "nameInPascalCase": "Contacts",
              "nameInSnakeCase": "CONTACTS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "hyperlinks",
              "complexType": "DatasetHyperlink",
              "getter": "getHyperlinks",
              "setter": "setHyperlinks",
              "dataType": "Set<DatasetHyperlink>",
              "datatypeWithEnum": "Set<DatasetHyperlink>",
              "name": "hyperlinks",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "isOverridden": false,
              "items": {
                "openApiType": "DatasetHyperlink",
                "baseName": "hyperlinks",
                "complexType": "DatasetHyperlink",
                "getter": "getHyperlinks",
                "setter": "setHyperlinks",
                "dataType": "DatasetHyperlink",
                "datatypeWithEnum": "DatasetHyperlink",
                "name": "hyperlinks",
                "baseType": "DatasetHyperlink",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "hyperlinks",
                "nameInPascalCase": "Hyperlinks",
                "nameInSnakeCase": "HYPERLINKS",
                "ref": "#/components/schemas/Dataset_Hyperlink"
              },
              "mostInnerItems": {
                "openApiType": "DatasetHyperlink",
                "baseName": "hyperlinks",
                "complexType": "DatasetHyperlink",
                "getter": "getHyperlinks",
                "setter": "setHyperlinks",
                "dataType": "DatasetHyperlink",
                "datatypeWithEnum": "DatasetHyperlink",
                "name": "hyperlinks",
                "baseType": "DatasetHyperlink",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "hyperlinks",
                "nameInPascalCase": "Hyperlinks",
                "nameInSnakeCase": "HYPERLINKS",
                "ref": "#/components/schemas/Dataset_Hyperlink"
              },
              "hasValidation": true,
              "nameInCamelCase": "hyperlinks",
              "nameInPascalCase": "Hyperlinks",
              "nameInSnakeCase": "HYPERLINKS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "organisms",
              "getter": "getOrganisms",
              "setter": "setOrganisms",
              "dataType": "Set<String>",
              "datatypeWithEnum": "Set<String>",
              "name": "organisms",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isPrimitiveType": true,
              "isContainer": true,
              "isArray": true,
              "isOverridden": false,
              "items": {
                "openApiType": "string",
                "baseName": "organisms",
                "getter": "getOrganisms",
                "setter": "setOrganisms",
                "dataType": "String",
                "datatypeWithEnum": "String",
                "name": "organisms",
                "baseType": "String",
                "maxLength": 200,
                "minLength": 3,
                "example": "null",
                "isPrimitiveType": true,
                "isString": true,
                "hasValidation": true,
                "nameInCamelCase": "organisms",
                "nameInPascalCase": "Organisms",
                "nameInSnakeCase": "ORGANISMS"
              },
              "mostInnerItems": {
                "openApiType": "string",
                "baseName": "organisms",
                "getter": "getOrganisms",
                "setter": "setOrganisms",
                "dataType": "String",
                "datatypeWithEnum": "String",
                "name": "organisms",
                "baseType": "String",
                "maxLength": 200,
                "minLength": 3,
                "example": "null",
                "isPrimitiveType": true,
                "isString": true,
                "hasValidation": true,
                "nameInCamelCase": "organisms",
                "nameInPascalCase": "Organisms",
                "nameInSnakeCase": "ORGANISMS"
              },
              "hasValidation": true,
              "nameInCamelCase": "organisms",
              "nameInPascalCase": "Organisms",
              "nameInSnakeCase": "ORGANISMS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "array",
              "baseName": "publications",
              "complexType": "DatasetPublication",
              "getter": "getPublications",
              "setter": "setPublications",
              "dataType": "Set<DatasetPublication>",
              "datatypeWithEnum": "Set<DatasetPublication>",
              "name": "publications",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "isOverridden": false,
              "items": {
                "openApiType": "DatasetPublication",
                "baseName": "publications",
                "complexType": "DatasetPublication",
                "getter": "getPublications",
                "setter": "setPublications",
                "dataType": "DatasetPublication",
                "datatypeWithEnum": "DatasetPublication",
                "name": "publications",
                "baseType": "DatasetPublication",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "publications",
                "nameInPascalCase": "Publications",
                "nameInSnakeCase": "PUBLICATIONS",
                "ref": "#/components/schemas/Dataset_Publication"
              },
              "mostInnerItems": {
                "openApiType": "DatasetPublication",
                "baseName": "publications",
                "complexType": "DatasetPublication",
                "getter": "getPublications",
                "setter": "setPublications",
                "dataType": "DatasetPublication",
                "datatypeWithEnum": "DatasetPublication",
                "name": "publications",
                "baseType": "DatasetPublication",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "publications",
                "nameInPascalCase": "Publications",
                "nameInSnakeCase": "PUBLICATIONS",
                "ref": "#/components/schemas/Dataset_Publication"
              },
              "hasValidation": true,
              "nameInCamelCase": "publications",
              "nameInPascalCase": "Publications",
              "nameInSnakeCase": "PUBLICATIONS",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetGetResponse",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Hyperlink": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetHyperlink",
        "model": {
          "name": "Dataset_Hyperlink",
          "schemaName": "Dataset_Hyperlink",
          "classname": "DatasetHyperlink",
          "title": "Dataset Hyperlink",
          "classVarName": "datasetHyperlink",
          "dataType": "Any",
          "classFilename": "DatasetHyperlink",
          "allMandatory": [
            "text",
            "url"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "url",
              "getter": "getUrl",
              "setter": "setUrl",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "url",
              "baseType": "String",
              "maxLength": 200,
              "minLength": 7,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "url",
              "nameInPascalCase": "Url",
              "nameInSnakeCase": "URL"
            },
            {
              "openApiType": "string",
              "baseName": "text",
              "getter": "getText",
              "setter": "setText",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "text",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "text",
              "nameInPascalCase": "Text",
              "nameInSnakeCase": "TEXT"
            },
            {
              "openApiType": "string",
              "baseName": "description?",
              "getter": "getDescriptionQuestionMark",
              "setter": "setDescriptionQuestionMark",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "descriptionQuestionMark",
              "baseType": "String",
              "maxLength": 4000,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "descriptionQuestionMark",
              "nameInPascalCase": "DescriptionQuestionMark",
              "nameInSnakeCase": "DESCRIPTION_QUESTION_MARK",
              "hasSanitizedName": true
            },
            {
              "openApiType": "boolean",
              "baseName": "isPublication?",
              "getter": "getIsPublicationQuestionMark",
              "setter": "setIsPublicationQuestionMark",
              "dataType": "Boolean",
              "datatypeWithEnum": "Boolean",
              "name": "isPublicationQuestionMark",
              "defaultValue": "false",
              "baseType": "Boolean",
              "example": "null",
              "isPrimitiveType": true,
              "isBoolean": true,
              "nameInCamelCase": "isPublicationQuestionMark",
              "nameInPascalCase": "IsPublicationQuestionMark",
              "nameInSnakeCase": "IS_PUBLICATION_QUESTION_MARK",
              "hasSanitizedName": true
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetHyperlink",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Import_Result": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetImportResult",
        "model": {
          "name": "Dataset_Import_Result",
          "schemaName": "Dataset_Import_Result",
          "classname": "DatasetImportResult",
          "title": "Dataset Import Result",
          "classVarName": "datasetImportResult",
          "dataType": "Any",
          "classFilename": "DatasetImportResult",
          "allMandatory": [
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "DatasetImportStatus",
              "baseName": "status",
              "complexType": "DatasetImportStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "DatasetImportStatus",
              "datatypeWithEnum": "DatasetImportStatus",
              "name": "status",
              "baseType": "DatasetImportStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Queued",
                    "isString": true,
                    "value": "\"queued\""
                  },
                  {
                    "name": "InProgress",
                    "isString": true,
                    "value": "\"in-progress\""
                  },
                  {
                    "name": "Complete",
                    "isString": true,
                    "value": "\"complete\""
                  },
                  {
                    "name": "Invalid",
                    "isString": true,
                    "value": "\"invalid\""
                  },
                  {
                    "name": "Failed",
                    "isString": true,
                    "value": "\"failed\""
                  }
                ],
                "values": [
                  "queued",
                  "in-progress",
                  "complete",
                  "invalid",
                  "failed"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "Queued",
                  "InProgress",
                  "Complete",
                  "Invalid",
                  "Failed"
                ]
              },
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Dataset_Import_Status"
            },
            {
              "openApiType": "array",
              "baseName": "messages",
              "complexType": "ProcessMessage",
              "getter": "getMessages",
              "setter": "setMessages",
              "dataType": "Set<ProcessMessage>",
              "datatypeWithEnum": "Set<ProcessMessage>",
              "name": "messages",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "ProcessMessage",
                "baseName": "messages",
                "complexType": "ProcessMessage",
                "getter": "getMessages",
                "setter": "setMessages",
                "dataType": "ProcessMessage",
                "datatypeWithEnum": "ProcessMessage",
                "name": "messages",
                "baseType": "ProcessMessage",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "messages",
                "nameInPascalCase": "Messages",
                "nameInSnakeCase": "MESSAGES",
                "ref": "#/components/schemas/Process_Message"
              },
              "mostInnerItems": {
                "openApiType": "ProcessMessage",
                "baseName": "messages",
                "complexType": "ProcessMessage",
                "getter": "getMessages",
                "setter": "setMessages",
                "dataType": "ProcessMessage",
                "datatypeWithEnum": "ProcessMessage",
                "name": "messages",
                "baseType": "ProcessMessage",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "messages",
                "nameInPascalCase": "Messages",
                "nameInSnakeCase": "MESSAGES",
                "ref": "#/components/schemas/Process_Message"
              },
              "hasValidation": true,
              "nameInCamelCase": "messages",
              "nameInPascalCase": "Messages",
              "nameInSnakeCase": "MESSAGES",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetImportResult",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Import_Status": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetImportStatus",
        "model": {
          "name": "Dataset_Import_Status",
          "schemaName": "Dataset_Import_Status",
          "classname": "DatasetImportStatus",
          "title": "Dataset Import Status",
          "description": "Import status of the dataset.  | Value         | Description                                                           | |---------------|-----------------------------------------------------------------------| | `queued`      | The dataset has not yet been processed and is waiting in the queue.   | | `in-progress` | The dataset is currently being import processed.                      | | `complete`    | The dataset has been processed and imported for installation.         | | `invalid`     | The dataset failed import validation.                                 | | `failed`      | The dataset import failed due to an internal server error.            |",
          "classVarName": "datasetImportStatus",
          "dataType": "String",
          "classFilename": "DatasetImportStatus",
          "unescapedDescription": "Import status of the dataset.\n\n| Value         | Description                                                           |\n|---------------|-----------------------------------------------------------------------|\n| `queued`      | The dataset has not yet been processed and is waiting in the queue.   |\n| `in-progress` | The dataset is currently being import processed.                      |\n| `complete`    | The dataset has been processed and imported for installation.         |\n| `invalid`     | The dataset failed import validation.                                 |\n| `failed`      | The dataset import failed due to an internal server error.            |",
          "isString": true,
          "allowableValues": {
            "values": [
              "queued",
              "in-progress",
              "complete",
              "invalid",
              "failed"
            ],
            "enumVars": [
              {
                "name": "Queued",
                "isString": true,
                "value": "\"queued\""
              },
              {
                "name": "InProgress",
                "isString": true,
                "value": "\"in-progress\""
              },
              {
                "name": "Complete",
                "isString": true,
                "value": "\"complete\""
              },
              {
                "name": "Invalid",
                "isString": true,
                "value": "\"invalid\""
              },
              {
                "name": "Failed",
                "isString": true,
                "value": "\"failed\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "vendorExtensions": {
            "x-enum-varnames": [
              "Queued",
              "InProgress",
              "Complete",
              "Invalid",
              "Failed"
            ]
          },
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetImportStatus",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Install_Status": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetInstallStatus",
        "model": {
          "name": "Dataset_Install_Status",
          "schemaName": "Dataset_Install_Status",
          "classname": "DatasetInstallStatus",
          "title": "Dataset Install Status",
          "classVarName": "datasetInstallStatus",
          "dataType": "String",
          "classFilename": "DatasetInstallStatus",
          "isString": true,
          "allowableValues": {
            "values": [
              "running",
              "complete",
              "failed-validation",
              "failed-installation",
              "ready-for-reinstall",
              "missing-dependency"
            ],
            "enumVars": [
              {
                "name": "Running",
                "isString": true,
                "value": "\"running\""
              },
              {
                "name": "Complete",
                "isString": true,
                "value": "\"complete\""
              },
              {
                "name": "FailedValidation",
                "isString": true,
                "value": "\"failed-validation\""
              },
              {
                "name": "FailedInstallation",
                "isString": true,
                "value": "\"failed-installation\""
              },
              {
                "name": "ReadyForReinstall",
                "isString": true,
                "value": "\"ready-for-reinstall\""
              },
              {
                "name": "MissingDependency",
                "isString": true,
                "value": "\"missing-dependency\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "vendorExtensions": {
            "x-enum-varnames": [
              "Running",
              "Complete",
              "FailedValidation",
              "FailedInstallation",
              "ReadyForReinstall",
              "MissingDependency"
            ]
          },
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetInstallStatus",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_List_Item": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetListItem",
        "model": {
          "name": "Dataset_List_Item",
          "schemaName": "Dataset_List_Item",
          "classname": "DatasetListItem",
          "title": "Dataset List Item",
          "description": "Short entry with basic details about a dataset.",
          "classVarName": "datasetListItem",
          "dataType": "Any",
          "classFilename": "DatasetListItem",
          "unescapedDescription": "Short entry with basic details about a dataset.",
          "allMandatory": [
            "created",
            "dataType",
            "datasetId",
            "fileCount",
            "fileSizeTotal",
            "installTargets",
            "name",
            "owner",
            "status",
            "summary",
            "visibility"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty",
            "com.fasterxml.jackson.annotation.JsonFormat",
            "java.net.URI",
            "java.time.OffsetDateTime"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "$defs": {
              "datasetListShareUser": {
                "title": "Dataset List Share Info",
                "type": "object",
                "properties": {
                  "userId": {
                    "$ref": "../../common/wdk/user-id.json"
                  },
                  "firstName": {
                    "type": "string"
                  },
                  "lastName": {
                    "type": "string"
                  },
                  "organization": {
                    "type": "string"
                  },
                  "accepted": {
                    "type": "boolean"
                  }
                },
                "unevaluatedProperties": false,
                "required": [
                  "userId",
                  "firstName",
                  "lastName",
                  "organization",
                  "accepted"
                ]
              }
            }
          },
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "datasetId",
              "getter": "getDatasetId",
              "setter": "setDatasetId",
              "description": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "datasetId",
              "baseType": "String",
              "title": "Dataset ID",
              "unescapedDescription": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "maxLength": 16,
              "minLength": 11,
              "pattern": "^\\\\w{11,16}(?:\\\\.\\\\d+)?$",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "datasetId",
              "nameInPascalCase": "DatasetId",
              "nameInSnakeCase": "DATASET_ID"
            },
            {
              "openApiType": "string",
              "baseName": "name",
              "getter": "getName",
              "setter": "setName",
              "description": "User-provided name for the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "name",
              "baseType": "String",
              "unescapedDescription": "User-provided name for the dataset.",
              "maxLength": 1024,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "name",
              "nameInPascalCase": "Name",
              "nameInSnakeCase": "NAME"
            },
            {
              "openApiType": "WDKUserInfo",
              "baseName": "owner",
              "complexType": "WDKUserInfo",
              "getter": "getOwner",
              "setter": "setOwner",
              "dataType": "WDKUserInfo",
              "datatypeWithEnum": "WDKUserInfo",
              "name": "owner",
              "baseType": "WDKUserInfo",
              "example": "null",
              "required": true,
              "isModel": true,
              "isOverridden": false,
              "nameInCamelCase": "owner",
              "nameInPascalCase": "Owner",
              "nameInSnakeCase": "OWNER",
              "ref": "#/components/schemas/WDK_User_Info"
            },
            {
              "openApiType": "string",
              "baseName": "summary",
              "getter": "getSummary",
              "setter": "setSummary",
              "description": "Brief summary of the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "summary",
              "baseType": "String",
              "unescapedDescription": "Brief summary of the dataset.",
              "maxLength": 4000,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "summary",
              "nameInPascalCase": "Summary",
              "nameInSnakeCase": "SUMMARY"
            },
            {
              "openApiType": "DatasetTypeDetails",
              "baseName": "dataType",
              "complexType": "DatasetTypeDetails",
              "getter": "getDataType",
              "setter": "setDataType",
              "dataType": "DatasetTypeDetails",
              "datatypeWithEnum": "DatasetTypeDetails",
              "name": "dataType",
              "baseType": "DatasetTypeDetails",
              "example": "null",
              "required": true,
              "isModel": true,
              "nameInCamelCase": "dataType",
              "nameInPascalCase": "DataType",
              "nameInSnakeCase": "DATA_TYPE",
              "ref": "#/components/schemas/Dataset_Type_Details"
            },
            {
              "openApiType": "DatasetVisibility",
              "baseName": "visibility",
              "complexType": "DatasetVisibility",
              "getter": "getVisibility",
              "setter": "setVisibility",
              "dataType": "DatasetVisibility",
              "datatypeWithEnum": "DatasetVisibility",
              "name": "visibility",
              "defaultValue": "DatasetVisibility.Private",
              "baseType": "DatasetVisibility",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "isOverridden": false,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Private",
                    "isString": true,
                    "value": "\"private\""
                  },
                  {
                    "name": "Protected",
                    "isString": true,
                    "value": "\"protected\""
                  },
                  {
                    "name": "Public",
                    "isString": true,
                    "value": "\"public\""
                  }
                ],
                "values": [
                  "private",
                  "protected",
                  "public"
                ]
              },
              "nameInCamelCase": "visibility",
              "nameInPascalCase": "Visibility",
              "nameInSnakeCase": "VISIBILITY",
              "ref": "#/components/schemas/Dataset_Visibility"
            },
            {
              "openApiType": "array",
              "baseName": "installTargets",
              "complexType": "InstallTargetID",
              "getter": "getInstallTargets",
              "setter": "setInstallTargets",
              "dataType": "Set<InstallTargetID>",
              "datatypeWithEnum": "Set<InstallTargetID>",
              "name": "installTargets",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "required": true,
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "mostInnerItems": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "hasValidation": true,
              "nameInCamelCase": "installTargets",
              "nameInPascalCase": "InstallTargets",
              "nameInSnakeCase": "INSTALL_TARGETS",
              "minItems": 1,
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "DatasetStatusInfo",
              "baseName": "status",
              "complexType": "DatasetStatusInfo",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "DatasetStatusInfo",
              "datatypeWithEnum": "DatasetStatusInfo",
              "name": "status",
              "baseType": "DatasetStatusInfo",
              "example": "null",
              "required": true,
              "isModel": true,
              "vendorExtensions": {
                "$defs": {
                  "importStatusInfo": {
                    "title": "Dataset Import Result",
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/$defs/importStatusEnum"
                      },
                      "messages": {
                        "title": "Import Messages",
                        "type": "array",
                        "items": {
                          "$ref": "#/$defs/processMessage"
                        },
                        "minLength": 1,
                        "uniqueItems": true,
                        "unevaluatedItems": false
                      }
                    },
                    "required": [
                      "status"
                    ],
                    "unevaluatedProperties": false
                  },
                  "importStatusEnum": {
                    "title": "Dataset Import Status",
                    "description": "Import status of the dataset.\n\n| Value         | Description                                                           |\n|---------------|-----------------------------------------------------------------------|\n| `queued`      | The dataset has not yet been processed and is waiting in the queue.   |\n| `in-progress` | The dataset is currently being import processed.                      |\n| `complete`    | The dataset has been processed and imported for installation.         |\n| `invalid`     | The dataset failed import validation.                                 |\n| `failed`      | The dataset import failed due to an internal server error.            |",
                    "type": "string",
                    "enum": [
                      "queued",
                      "in-progress",
                      "complete",
                      "invalid",
                      "failed"
                    ],
                    "x-enum-varnames": [
                      "Queued",
                      "InProgress",
                      "Complete",
                      "Invalid",
                      "Failed"
                    ]
                  },
                  "installStatusEnum": {
                    "title": "Dataset Install Status",
                    "type": "string",
                    "enum": [
                      "running",
                      "complete",
                      "failed-validation",
                      "failed-installation",
                      "ready-for-reinstall",
                      "missing-dependency"
                    ],
                    "x-enum-varnames": [
                      "Running",
                      "Complete",
                      "FailedValidation",
                      "FailedInstallation",
                      "ReadyForReinstall",
                      "MissingDependency"
                    ]
                  },
                  "installStatusInfo": {
                    "type": "object",
                    "properties": {
                      "status": {
                        "$ref": "#/$defs/installStatusEnum"
                      },
                      "lastUpdate": {
                        "$ref": "fields/timestamp.json"
                      },
                      "messages": {
                        "title": "Data Install Messages",
                        "description": "Warning or error messages returned from the installation process.",
                        "type": "array",
                        "items": {
                          "$ref": "#/$defs/processMessage"
                        },
                        "minLength": 1,
                        "uniqueItems": true,
                        "unevaluatedItems": false
                      }
                    },
                    "required": [
                      "status",
                      "lastUpdate"
                    ],
                    "unevaluatedProperties": false
                  },
                  "installStatusArrayItem": {
                    "title": "Install Target Status",
                    "description": "Entry in a list of install statuses for a dataset.",
                    "properties": {
                      "target": {
                        "$ref": "../common/fields/install-target.json"
                      },
                      "meta": {
                        "$ref": "#/$defs/installStatusInfo"
                      },
                      "data": {
                        "$ref": "#/$defs/installStatusInfo"
                      }
                    },
                    "required": [
                      "target",
                      "meta"
                    ],
                    "unevaluatedProperties": false
                  },
                  "processMessage": {
                    "title": "Process Message",
                    "type": "object",
                    "properties": {
                      "kind": {
                        "type": "string",
                        "enum": [
                          "info",
                          "warning",
                          "error"
                        ]
                      },
                      "message": {
                        "type": "string",
                        "minLength": 3
                      }
                    },
                    "required": [
                      "kind",
                      "message"
                    ],
                    "unevaluatedProperties": false
                  }
                }
              },
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Dataset_Status_Info"
            },
            {
              "openApiType": "integer",
              "baseName": "fileCount",
              "getter": "getFileCount",
              "setter": "setFileCount",
              "description": "Number of files uploaded for this dataset.",
              "dataType": "Int",
              "datatypeWithEnum": "Int",
              "dataFormat": "int32",
              "name": "fileCount",
              "baseType": "Int",
              "unescapedDescription": "Number of files uploaded for this dataset.",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isNumeric": true,
              "isInteger": true,
              "isShort": true,
              "nameInCamelCase": "fileCount",
              "nameInPascalCase": "FileCount",
              "nameInSnakeCase": "FILE_COUNT",
              "format": "int32"
            },
            {
              "openApiType": "integer",
              "baseName": "fileSizeTotal",
              "getter": "getFileSizeTotal",
              "setter": "setFileSizeTotal",
              "description": "Sum of the sizes of all the files uploaded for this dataset. ",
              "dataType": "Long",
              "datatypeWithEnum": "Long",
              "dataFormat": "int64",
              "name": "fileSizeTotal",
              "baseType": "Long",
              "unescapedDescription": "Sum of the sizes of all the files uploaded for this dataset.\n",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isNumeric": true,
              "isLong": true,
              "nameInCamelCase": "fileSizeTotal",
              "nameInPascalCase": "FileSizeTotal",
              "nameInSnakeCase": "FILE_SIZE_TOTAL",
              "format": "int64"
            },
            {
              "openApiType": "string",
              "baseName": "created",
              "complexType": "java.time.OffsetDateTime",
              "getter": "getCreated",
              "setter": "setCreated",
              "description": "Timestamp of the creation of the dataset",
              "dataType": "OffsetDateTime",
              "datatypeWithEnum": "OffsetDateTime",
              "dataFormat": "date-time",
              "name": "created",
              "baseType": "java.time.OffsetDateTime",
              "title": "Dataset Creation Date",
              "unescapedDescription": "Timestamp of the creation of the dataset",
              "example": "null",
              "required": true,
              "isDateTime": true,
              "isOverridden": false,
              "nameInCamelCase": "created",
              "nameInPascalCase": "Created",
              "nameInSnakeCase": "CREATED",
              "format": "date-time"
            },
            {
              "openApiType": "string",
              "baseName": "description",
              "getter": "getDescription",
              "setter": "setDescription",
              "description": "Longform description of the dataset.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "description",
              "baseType": "String",
              "unescapedDescription": "Longform description of the dataset.",
              "maxLength": 52428800,
              "minLength": 1,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "description",
              "nameInPascalCase": "Description",
              "nameInSnakeCase": "DESCRIPTION"
            },
            {
              "openApiType": "string",
              "baseName": "sourceUrl",
              "complexType": "java.net.URI",
              "getter": "getSourceUrl",
              "setter": "setSourceUrl",
              "description": "URL of the dataset data source, if the dataset was uploaded via URL.",
              "dataType": "URI",
              "datatypeWithEnum": "URI",
              "dataFormat": "uri",
              "name": "sourceUrl",
              "baseType": "java.net.URI",
              "unescapedDescription": "URL of the dataset data source, if the dataset was uploaded via URL.",
              "example": "null",
              "isString": true,
              "isUri": true,
              "isOverridden": false,
              "nameInCamelCase": "sourceUrl",
              "nameInPascalCase": "SourceUrl",
              "nameInSnakeCase": "SOURCE_URL",
              "format": "uri"
            },
            {
              "openApiType": "string",
              "baseName": "originalId",
              "getter": "getOriginalId",
              "setter": "setOriginalId",
              "description": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "originalId",
              "baseType": "String",
              "title": "Dataset ID",
              "unescapedDescription": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "maxLength": 16,
              "minLength": 11,
              "pattern": "^\\\\w{11,16}(?:\\\\.\\\\d+)?$",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "originalId",
              "nameInPascalCase": "OriginalId",
              "nameInSnakeCase": "ORIGINAL_ID"
            },
            {
              "openApiType": "array",
              "baseName": "shares",
              "complexType": "DatasetListShareInfo",
              "getter": "getShares",
              "setter": "setShares",
              "dataType": "Set<DatasetListShareInfo>",
              "datatypeWithEnum": "Set<DatasetListShareInfo>",
              "name": "shares",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "DatasetListShareInfo",
                "baseName": "shares",
                "complexType": "DatasetListShareInfo",
                "getter": "getShares",
                "setter": "setShares",
                "dataType": "DatasetListShareInfo",
                "datatypeWithEnum": "DatasetListShareInfo",
                "name": "shares",
                "baseType": "DatasetListShareInfo",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "shares",
                "nameInPascalCase": "Shares",
                "nameInSnakeCase": "SHARES",
                "ref": "#/components/schemas/Dataset_List_Share_Info"
              },
              "mostInnerItems": {
                "openApiType": "DatasetListShareInfo",
                "baseName": "shares",
                "complexType": "DatasetListShareInfo",
                "getter": "getShares",
                "setter": "setShares",
                "dataType": "DatasetListShareInfo",
                "datatypeWithEnum": "DatasetListShareInfo",
                "name": "shares",
                "baseType": "DatasetListShareInfo",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "shares",
                "nameInPascalCase": "Shares",
                "nameInSnakeCase": "SHARES",
                "ref": "#/components/schemas/Dataset_List_Share_Info"
              },
              "hasValidation": true,
              "nameInCamelCase": "shares",
              "nameInPascalCase": "Shares",
              "nameInSnakeCase": "SHARES",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "string",
              "baseName": "shortName",
              "getter": "getShortName",
              "setter": "setShortName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "shortName",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "shortName",
              "nameInPascalCase": "ShortName",
              "nameInSnakeCase": "SHORT_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "shortAttribution",
              "getter": "getShortAttribution",
              "setter": "setShortAttribution",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "shortAttribution",
              "baseType": "String",
              "maxLength": 300,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "shortAttribution",
              "nameInPascalCase": "ShortAttribution",
              "nameInSnakeCase": "SHORT_ATTRIBUTION"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetListItem",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_List_Share_Info": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetListShareInfo",
        "model": {
          "name": "Dataset_List_Share_Info",
          "schemaName": "Dataset_List_Share_Info",
          "classname": "DatasetListShareInfo",
          "title": "Dataset List Share Info",
          "classVarName": "datasetListShareInfo",
          "dataType": "Any",
          "classFilename": "DatasetListShareInfo",
          "allMandatory": [
            "accepted",
            "firstName",
            "lastName",
            "organization",
            "userId"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "integer",
              "baseName": "userId",
              "getter": "getUserId",
              "setter": "setUserId",
              "description": "VEuPathDB User ID",
              "dataType": "Long",
              "datatypeWithEnum": "Long",
              "dataFormat": "int64",
              "name": "userId",
              "baseType": "Long",
              "unescapedDescription": "VEuPathDB User ID",
              "example": "null",
              "minimum": "1",
              "required": true,
              "isPrimitiveType": true,
              "isNumeric": true,
              "isLong": true,
              "vendorExtensions": {
                "x-unsigned": true
              },
              "hasValidation": true,
              "nameInCamelCase": "userId",
              "nameInPascalCase": "UserId",
              "nameInSnakeCase": "USER_ID",
              "format": "int64"
            },
            {
              "openApiType": "string",
              "baseName": "firstName",
              "getter": "getFirstName",
              "setter": "setFirstName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "firstName",
              "baseType": "String",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "nameInCamelCase": "firstName",
              "nameInPascalCase": "FirstName",
              "nameInSnakeCase": "FIRST_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "lastName",
              "getter": "getLastName",
              "setter": "setLastName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "lastName",
              "baseType": "String",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "nameInCamelCase": "lastName",
              "nameInPascalCase": "LastName",
              "nameInSnakeCase": "LAST_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "organization",
              "getter": "getOrganization",
              "setter": "setOrganization",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "organization",
              "baseType": "String",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "nameInCamelCase": "organization",
              "nameInPascalCase": "Organization",
              "nameInSnakeCase": "ORGANIZATION"
            },
            {
              "openApiType": "boolean",
              "baseName": "accepted",
              "getter": "getAccepted",
              "setter": "setAccepted",
              "dataType": "Boolean",
              "datatypeWithEnum": "Boolean",
              "name": "accepted",
              "baseType": "Boolean",
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isBoolean": true,
              "nameInCamelCase": "accepted",
              "nameInPascalCase": "Accepted",
              "nameInSnakeCase": "ACCEPTED"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetListShareInfo",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Post_Meta": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetPostMeta",
        "model": {
          "name": "Dataset_Post_Meta",
          "schemaName": "Dataset_Post_Meta",
          "classname": "DatasetPostMeta",
          "title": "Dataset Post Meta",
          "description": "Metadata about the dataset being submitted.",
          "classVarName": "datasetPostMeta",
          "dataType": "Any",
          "classFilename": "DatasetPostMeta",
          "unescapedDescription": "Metadata about the dataset being submitted.",
          "allMandatory": [
            "datasetType"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "DataTypeRequestValues",
              "baseName": "datasetType",
              "complexType": "DataTypeRequestValues",
              "getter": "getDatasetType",
              "setter": "setDatasetType",
              "dataType": "DataTypeRequestValues",
              "datatypeWithEnum": "DataTypeRequestValues",
              "name": "datasetType",
              "baseType": "DataTypeRequestValues",
              "example": "null",
              "required": true,
              "isModel": true,
              "nameInCamelCase": "datasetType",
              "nameInPascalCase": "DatasetType",
              "nameInSnakeCase": "DATASET_TYPE",
              "ref": "#/components/schemas/Data_Type_Request_Values"
            },
            {
              "openApiType": "array",
              "baseName": "installTargets",
              "complexType": "InstallTargetID",
              "getter": "getInstallTargets",
              "setter": "setInstallTargets",
              "dataType": "Set<InstallTargetID>",
              "datatypeWithEnum": "Set<InstallTargetID>",
              "name": "installTargets",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "mostInnerItems": {
                "openApiType": "InstallTargetID",
                "baseName": "installTargets",
                "complexType": "InstallTargetID",
                "getter": "getInstallTargets",
                "setter": "setInstallTargets",
                "dataType": "InstallTargetID",
                "datatypeWithEnum": "InstallTargetID",
                "name": "installTargets",
                "baseType": "InstallTargetID",
                "example": "null",
                "isEnumRef": true,
                "allowableValues": {
                  "values": [
                    "AmoebaDB",
                    "ClinEpiDB",
                    "CryptoDB",
                    "FungiDB",
                    "GiardiaDB",
                    "HostDB",
                    "MicrobiomeDB",
                    "MicrosporidiaDB",
                    "OrthoMCL",
                    "PiroplasmaDB",
                    "PlasmoDB",
                    "ToxoDB",
                    "TrichDB",
                    "TriTrypDB",
                    "VectorBase",
                    "VEuPathDB"
                  ],
                  "enumVars": [
                    {
                      "name": "AmoebaDB",
                      "isString": true,
                      "value": "\"AmoebaDB\""
                    },
                    {
                      "name": "ClinEpiDB",
                      "isString": true,
                      "value": "\"ClinEpiDB\""
                    },
                    {
                      "name": "CryptoDB",
                      "isString": true,
                      "value": "\"CryptoDB\""
                    },
                    {
                      "name": "FungiDB",
                      "isString": true,
                      "value": "\"FungiDB\""
                    },
                    {
                      "name": "GiardiaDB",
                      "isString": true,
                      "value": "\"GiardiaDB\""
                    },
                    {
                      "name": "HostDB",
                      "isString": true,
                      "value": "\"HostDB\""
                    },
                    {
                      "name": "MicrobiomeDB",
                      "isString": true,
                      "value": "\"MicrobiomeDB\""
                    },
                    {
                      "name": "MicrosporidiaDB",
                      "isString": true,
                      "value": "\"MicrosporidiaDB\""
                    },
                    {
                      "name": "OrthoMCL",
                      "isString": true,
                      "value": "\"OrthoMCL\""
                    },
                    {
                      "name": "PiroplasmaDB",
                      "isString": true,
                      "value": "\"PiroplasmaDB\""
                    },
                    {
                      "name": "PlasmoDB",
                      "isString": true,
                      "value": "\"PlasmoDB\""
                    },
                    {
                      "name": "ToxoDB",
                      "isString": true,
                      "value": "\"ToxoDB\""
                    },
                    {
                      "name": "TrichDB",
                      "isString": true,
                      "value": "\"TrichDB\""
                    },
                    {
                      "name": "TriTrypDB",
                      "isString": true,
                      "value": "\"TriTrypDB\""
                    },
                    {
                      "name": "VectorBase",
                      "isString": true,
                      "value": "\"VectorBase\""
                    },
                    {
                      "name": "VEuPathDB",
                      "isString": true,
                      "value": "\"VEuPathDB\""
                    }
                  ]
                },
                "nameInCamelCase": "installTargets",
                "nameInPascalCase": "InstallTargets",
                "nameInSnakeCase": "INSTALL_TARGETS",
                "ref": "#/components/schemas/Install_Target"
              },
              "hasValidation": true,
              "nameInCamelCase": "installTargets",
              "nameInPascalCase": "InstallTargets",
              "nameInSnakeCase": "INSTALL_TARGETS",
              "minItems": 1,
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            },
            {
              "openApiType": "DatasetVisibility",
              "baseName": "visibility",
              "complexType": "DatasetVisibility",
              "getter": "getVisibility",
              "setter": "setVisibility",
              "dataType": "DatasetVisibility",
              "datatypeWithEnum": "DatasetVisibility",
              "name": "visibility",
              "defaultValue": "DatasetVisibility.Private",
              "baseType": "DatasetVisibility",
              "example": "null",
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Private",
                    "isString": true,
                    "value": "\"private\""
                  },
                  {
                    "name": "Protected",
                    "isString": true,
                    "value": "\"protected\""
                  },
                  {
                    "name": "Public",
                    "isString": true,
                    "value": "\"public\""
                  }
                ],
                "values": [
                  "private",
                  "protected",
                  "public"
                ]
              },
              "nameInCamelCase": "visibility",
              "nameInPascalCase": "Visibility",
              "nameInSnakeCase": "VISIBILITY",
              "ref": "#/components/schemas/Dataset_Visibility"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetPostMeta",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Publication": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetPublication",
        "model": {
          "name": "Dataset_Publication",
          "schemaName": "Dataset_Publication",
          "classname": "DatasetPublication",
          "title": "Dataset Publication",
          "classVarName": "datasetPublication",
          "dataType": "Any",
          "classFilename": "DatasetPublication",
          "allMandatory": [
            "pubMedId"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "requiredVarsMap": {
            "pubMedId": {
              "openApiType": "string",
              "baseName": "pubMedId",
              "getter": "getPubMedId",
              "setter": "setPubMedId",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "pubMedId",
              "baseType": "String",
              "maxLength": 30,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "pubMedId",
              "nameInPascalCase": "PubMedId",
              "nameInSnakeCase": "PUB_MED_ID"
            }
          },
          "properties": [
            {
              "openApiType": "string",
              "baseName": "pubMedId",
              "getter": "getPubMedId",
              "setter": "setPubMedId",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "pubMedId",
              "baseType": "String",
              "maxLength": 30,
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "pubMedId",
              "nameInPascalCase": "PubMedId",
              "nameInSnakeCase": "PUB_MED_ID"
            },
            {
              "openApiType": "string",
              "baseName": "citation",
              "getter": "getCitation",
              "setter": "setCitation",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "citation",
              "baseType": "String",
              "maxLength": 2000,
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "citation",
              "nameInPascalCase": "Citation",
              "nameInSnakeCase": "CITATION"
            },
            {
              "openApiType": "boolean",
              "baseName": "isPrimary",
              "getter": "getIsPrimary",
              "setter": "setIsPrimary",
              "dataType": "Boolean",
              "datatypeWithEnum": "Boolean",
              "name": "isPrimary",
              "defaultValue": "false",
              "baseType": "Boolean",
              "example": "null",
              "isPrimitiveType": true,
              "isBoolean": true,
              "nameInCamelCase": "isPrimary",
              "nameInPascalCase": "IsPrimary",
              "nameInSnakeCase": "IS_PRIMARY"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetPublication",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Revision": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetRevision",
        "model": {
          "name": "Dataset_Revision",
          "schemaName": "Dataset_Revision",
          "classname": "DatasetRevision",
          "title": "Dataset Revision",
          "description": "Dataset revision history entry.",
          "classVarName": "datasetRevision",
          "dataType": "Any",
          "classFilename": "DatasetRevision",
          "unescapedDescription": "Dataset revision history entry.",
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty",
            "com.fasterxml.jackson.annotation.JsonFormat",
            "java.net.URI",
            "java.time.OffsetDateTime"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "$defs": {
              "revisionAction": {
                "title": "Dataset Revision Action",
                "type": "string",
                "enum": [
                  "revise"
                ]
              },
              "revisionNote": {
                "description": "Note providing a reason and/or description for the revision.",
                "type": "string",
                "minLength": 10,
                "maxLength": 4096
              }
            }
          },
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "DatasetRevisionAction",
              "baseName": "action",
              "complexType": "DatasetRevisionAction",
              "getter": "getAction",
              "setter": "setAction",
              "dataType": "DatasetRevisionAction",
              "datatypeWithEnum": "DatasetRevisionAction",
              "name": "action",
              "baseType": "DatasetRevisionAction",
              "example": "null",
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Revise",
                    "isString": true,
                    "value": "\"revise\""
                  }
                ],
                "values": [
                  "revise"
                ]
              },
              "nameInCamelCase": "action",
              "nameInPascalCase": "Action",
              "nameInSnakeCase": "ACTION",
              "ref": "#/components/schemas/Dataset_Revision_Action"
            },
            {
              "openApiType": "string",
              "baseName": "timestamp",
              "complexType": "java.time.OffsetDateTime",
              "getter": "getTimestamp",
              "setter": "setTimestamp",
              "dataType": "OffsetDateTime",
              "datatypeWithEnum": "OffsetDateTime",
              "dataFormat": "date-time",
              "name": "timestamp",
              "baseType": "java.time.OffsetDateTime",
              "example": "null",
              "isDateTime": true,
              "nameInCamelCase": "timestamp",
              "nameInPascalCase": "Timestamp",
              "nameInSnakeCase": "TIMESTAMP",
              "format": "date-time"
            },
            {
              "openApiType": "string",
              "baseName": "revisionId",
              "getter": "getRevisionId",
              "setter": "setRevisionId",
              "description": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "revisionId",
              "baseType": "String",
              "title": "Dataset ID",
              "unescapedDescription": "Randomly generated identifier for a dataset, optionally suffixed with a revision counter.",
              "maxLength": 16,
              "minLength": 11,
              "pattern": "^\\\\w{11,16}(?:\\\\.\\\\d+)?$",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "revisionId",
              "nameInPascalCase": "RevisionId",
              "nameInSnakeCase": "REVISION_ID"
            },
            {
              "openApiType": "string",
              "baseName": "revisionNote",
              "getter": "getRevisionNote",
              "setter": "setRevisionNote",
              "description": "Note providing a reason and/or description for the revision.",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "revisionNote",
              "baseType": "String",
              "unescapedDescription": "Note providing a reason and/or description for the revision.",
              "maxLength": 4096,
              "minLength": 10,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "revisionNote",
              "nameInPascalCase": "RevisionNote",
              "nameInSnakeCase": "REVISION_NOTE"
            },
            {
              "openApiType": "string",
              "baseName": "fileListUrl",
              "complexType": "java.net.URI",
              "getter": "getFileListUrl",
              "setter": "setFileListUrl",
              "description": "URL of the file listing API endpoint for the revision entry.",
              "dataType": "URI",
              "datatypeWithEnum": "URI",
              "dataFormat": "uri",
              "name": "fileListUrl",
              "baseType": "java.net.URI",
              "unescapedDescription": "URL of the file listing API endpoint for the revision entry.",
              "example": "null",
              "isString": true,
              "isUri": true,
              "nameInCamelCase": "fileListUrl",
              "nameInPascalCase": "FileListUrl",
              "nameInSnakeCase": "FILE_LIST_URL",
              "format": "uri"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetRevision",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Revision_Action": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetRevisionAction",
        "model": {
          "name": "Dataset_Revision_Action",
          "schemaName": "Dataset_Revision_Action",
          "classname": "DatasetRevisionAction",
          "title": "Dataset Revision Action",
          "classVarName": "datasetRevisionAction",
          "dataType": "String",
          "classFilename": "DatasetRevisionAction",
          "isString": true,
          "allowableValues": {
            "values": [
              "revise"
            ],
            "enumVars": [
              {
                "name": "Revise",
                "isString": true,
                "value": "\"revise\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetRevisionAction",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Share_Offer": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetShareOffer",
        "model": {
          "name": "Dataset_Share_Offer",
          "schemaName": "Dataset_Share_Offer",
          "classname": "DatasetShareOffer",
          "title": "Dataset Share Offer",
          "classVarName": "datasetShareOffer",
          "dataType": "Any",
          "classFilename": "DatasetShareOffer",
          "allMandatory": [
            "recipient",
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "Any",
              "baseName": "recipient",
              "getter": "getRecipient",
              "setter": "setRecipient",
              "dataType": "Any",
              "datatypeWithEnum": "Any",
              "name": "recipient",
              "baseType": "Any",
              "example": "null",
              "required": true,
              "isAnyType": true,
              "isNullable": true,
              "nameInCamelCase": "recipient",
              "nameInPascalCase": "Recipient",
              "nameInSnakeCase": "RECIPIENT",
              "isBooleanSchemaTrue": true
            },
            {
              "openApiType": "DatasetShareOfferAction",
              "baseName": "status",
              "complexType": "DatasetShareOfferAction",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "DatasetShareOfferAction",
              "datatypeWithEnum": "DatasetShareOfferAction",
              "name": "status",
              "baseType": "DatasetShareOfferAction",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Grant",
                    "isString": true,
                    "value": "\"grant\""
                  },
                  {
                    "name": "Revoke",
                    "isString": true,
                    "value": "\"revoke\""
                  }
                ],
                "values": [
                  "grant",
                  "revoke"
                ]
              },
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Dataset_Share_Offer_Action"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetShareOffer",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Share_Offer_Action": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetShareOfferAction",
        "model": {
          "name": "Dataset_Share_Offer_Action",
          "schemaName": "Dataset_Share_Offer_Action",
          "classname": "DatasetShareOfferAction",
          "title": "Dataset Share Offer Action",
          "classVarName": "datasetShareOfferAction",
          "dataType": "String",
          "classFilename": "DatasetShareOfferAction",
          "isString": true,
          "allowableValues": {
            "values": [
              "grant",
              "revoke"
            ],
            "enumVars": [
              {
                "name": "Grant",
                "isString": true,
                "value": "\"grant\""
              },
              {
                "name": "Revoke",
                "isString": true,
                "value": "\"revoke\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetShareOfferAction",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Status_Info": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetStatusInfo",
        "model": {
          "name": "Dataset_Status_Info",
          "schemaName": "Dataset_Status_Info",
          "classname": "DatasetStatusInfo",
          "title": "Dataset Status Info",
          "description": "Information about the dataset's processing status through the various phases as it is processed and installed.",
          "classVarName": "datasetStatusInfo",
          "dataType": "Any",
          "classFilename": "DatasetStatusInfo",
          "unescapedDescription": "Information about the dataset's processing status through the various\nphases as it is processed and installed.",
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "$defs": {
              "importStatusInfo": {
                "title": "Dataset Import Result",
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/$defs/importStatusEnum"
                  },
                  "messages": {
                    "title": "Import Messages",
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/processMessage"
                    },
                    "minLength": 1,
                    "uniqueItems": true,
                    "unevaluatedItems": false
                  }
                },
                "required": [
                  "status"
                ],
                "unevaluatedProperties": false
              },
              "importStatusEnum": {
                "title": "Dataset Import Status",
                "description": "Import status of the dataset.\n\n| Value         | Description                                                           |\n|---------------|-----------------------------------------------------------------------|\n| `queued`      | The dataset has not yet been processed and is waiting in the queue.   |\n| `in-progress` | The dataset is currently being import processed.                      |\n| `complete`    | The dataset has been processed and imported for installation.         |\n| `invalid`     | The dataset failed import validation.                                 |\n| `failed`      | The dataset import failed due to an internal server error.            |",
                "type": "string",
                "enum": [
                  "queued",
                  "in-progress",
                  "complete",
                  "invalid",
                  "failed"
                ],
                "x-enum-varnames": [
                  "Queued",
                  "InProgress",
                  "Complete",
                  "Invalid",
                  "Failed"
                ]
              },
              "installStatusEnum": {
                "title": "Dataset Install Status",
                "type": "string",
                "enum": [
                  "running",
                  "complete",
                  "failed-validation",
                  "failed-installation",
                  "ready-for-reinstall",
                  "missing-dependency"
                ],
                "x-enum-varnames": [
                  "Running",
                  "Complete",
                  "FailedValidation",
                  "FailedInstallation",
                  "ReadyForReinstall",
                  "MissingDependency"
                ]
              },
              "installStatusInfo": {
                "type": "object",
                "properties": {
                  "status": {
                    "$ref": "#/$defs/installStatusEnum"
                  },
                  "lastUpdate": {
                    "$ref": "fields/timestamp.json"
                  },
                  "messages": {
                    "title": "Data Install Messages",
                    "description": "Warning or error messages returned from the installation process.",
                    "type": "array",
                    "items": {
                      "$ref": "#/$defs/processMessage"
                    },
                    "minLength": 1,
                    "uniqueItems": true,
                    "unevaluatedItems": false
                  }
                },
                "required": [
                  "status",
                  "lastUpdate"
                ],
                "unevaluatedProperties": false
              },
              "installStatusArrayItem": {
                "title": "Install Target Status",
                "description": "Entry in a list of install statuses for a dataset.",
                "properties": {
                  "target": {
                    "$ref": "../common/fields/install-target.json"
                  },
                  "meta": {
                    "$ref": "#/$defs/installStatusInfo"
                  },
                  "data": {
                    "$ref": "#/$defs/installStatusInfo"
                  }
                },
                "required": [
                  "target",
                  "meta"
                ],
                "unevaluatedProperties": false
              },
              "processMessage": {
                "title": "Process Message",
                "type": "object",
                "properties": {
                  "kind": {
                    "type": "string",
                    "enum": [
                      "info",
                      "warning",
                      "error"
                    ]
                  },
                  "message": {
                    "type": "string",
                    "minLength": 3
                  }
                },
                "required": [
                  "kind",
                  "message"
                ],
                "unevaluatedProperties": false
              }
            }
          },
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "DatasetImportResult",
              "baseName": "import",
              "complexType": "DatasetImportResult",
              "getter": "get`Import`",
              "setter": "set`Import`",
              "dataType": "DatasetImportResult",
              "datatypeWithEnum": "DatasetImportResult",
              "name": "`import`",
              "baseType": "DatasetImportResult",
              "example": "null",
              "isModel": true,
              "nameInCamelCase": "`import`",
              "nameInPascalCase": "`Import`",
              "nameInSnakeCase": "`_IMPORT`",
              "hasSanitizedName": true,
              "ref": "#/components/schemas/Dataset_Import_Result"
            },
            {
              "openApiType": "array",
              "baseName": "install",
              "complexType": "InstallTargetStatus",
              "getter": "getInstall",
              "setter": "setInstall",
              "description": "List of dataset install status for each of the dataset's install targets.",
              "dataType": "Set<InstallTargetStatus>",
              "datatypeWithEnum": "Set<InstallTargetStatus>",
              "name": "install",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "unescapedDescription": "List of dataset install status for each of the dataset's install targets.",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "InstallTargetStatus",
                "baseName": "install",
                "complexType": "InstallTargetStatus",
                "getter": "getInstall",
                "setter": "setInstall",
                "dataType": "InstallTargetStatus",
                "datatypeWithEnum": "InstallTargetStatus",
                "name": "install",
                "baseType": "InstallTargetStatus",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "install",
                "nameInPascalCase": "Install",
                "nameInSnakeCase": "INSTALL",
                "ref": "#/components/schemas/Install_Target_Status"
              },
              "mostInnerItems": {
                "openApiType": "InstallTargetStatus",
                "baseName": "install",
                "complexType": "InstallTargetStatus",
                "getter": "getInstall",
                "setter": "setInstall",
                "dataType": "InstallTargetStatus",
                "datatypeWithEnum": "InstallTargetStatus",
                "name": "install",
                "baseType": "InstallTargetStatus",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "install",
                "nameInPascalCase": "Install",
                "nameInSnakeCase": "INSTALL",
                "ref": "#/components/schemas/Install_Target_Status"
              },
              "hasValidation": true,
              "nameInCamelCase": "install",
              "nameInPascalCase": "Install",
              "nameInSnakeCase": "INSTALL",
              "minItems": 1,
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetStatusInfo",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Type_Details": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetTypeDetails",
        "model": {
          "name": "Dataset_Type_Details",
          "schemaName": "Dataset_Type_Details",
          "classname": "DatasetTypeDetails",
          "title": "Dataset Type Details",
          "description": "Details about a specific dataset type.",
          "classVarName": "datasetTypeDetails",
          "dataType": "Any",
          "classFilename": "DatasetTypeDetails",
          "unescapedDescription": "Details about a specific dataset type.",
          "allMandatory": [
            "displayName",
            "name",
            "version"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "string",
              "baseName": "name",
              "getter": "getName",
              "setter": "setName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "name",
              "baseType": "String",
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "name",
              "nameInPascalCase": "Name",
              "nameInSnakeCase": "NAME"
            },
            {
              "openApiType": "string",
              "baseName": "version",
              "getter": "getVersion",
              "setter": "setVersion",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "version",
              "baseType": "String",
              "minLength": 1,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "version",
              "nameInPascalCase": "Version",
              "nameInSnakeCase": "VERSION"
            },
            {
              "openApiType": "string",
              "baseName": "displayName",
              "getter": "getDisplayName",
              "setter": "setDisplayName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "displayName",
              "baseType": "String",
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "displayName",
              "nameInPascalCase": "DisplayName",
              "nameInSnakeCase": "DISPLAY_NAME"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetTypeDetails",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Dataset_Visibility": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.DatasetVisibility",
        "model": {
          "name": "Dataset_Visibility",
          "schemaName": "Dataset_Visibility",
          "classname": "DatasetVisibility",
          "title": "Dataset Visibility",
          "classVarName": "datasetVisibility",
          "dataType": "String",
          "classFilename": "DatasetVisibility",
          "isString": true,
          "allowableValues": {
            "values": [
              "private",
              "protected",
              "public"
            ],
            "enumVars": [
              {
                "name": "Private",
                "isString": true,
                "value": "\"private\""
              },
              {
                "name": "Protected",
                "isString": true,
                "value": "\"protected\""
              },
              {
                "name": "Public",
                "isString": true,
                "value": "\"public\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "DatasetVisibility",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Error_Status": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.ErrorStatus",
        "model": {
          "name": "Error_Status",
          "schemaName": "Error_Status",
          "classname": "ErrorStatus",
          "title": "Error Status",
          "classVarName": "errorStatus",
          "dataType": "String",
          "classFilename": "ErrorStatus",
          "isString": true,
          "allowableValues": {
            "values": [
              "bad-request",
              "unauthorized",
              "forbidden",
              "not-found",
              "bad-method",
              "conflict",
              "gone",
              "invalid-input",
              "failed-dependency",
              "server-error"
            ],
            "enumVars": [
              {
                "name": "BadRequest",
                "isString": true,
                "value": "\"bad-request\""
              },
              {
                "name": "Unauthorized",
                "isString": true,
                "value": "\"unauthorized\""
              },
              {
                "name": "Forbidden",
                "isString": true,
                "value": "\"forbidden\""
              },
              {
                "name": "NotFound",
                "isString": true,
                "value": "\"not-found\""
              },
              {
                "name": "MethodNotAllowed",
                "isString": true,
                "value": "\"bad-method\""
              },
              {
                "name": "Conflict",
                "isString": true,
                "value": "\"conflict\""
              },
              {
                "name": "Gone",
                "isString": true,
                "value": "\"gone\""
              },
              {
                "name": "Unprocessable",
                "isString": true,
                "value": "\"invalid-input\""
              },
              {
                "name": "FailedDependency",
                "isString": true,
                "value": "\"failed-dependency\""
              },
              {
                "name": "ServerError",
                "isString": true,
                "value": "\"server-error\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "vendorExtensions": {
            "x-enum-varnames": [
              "BadRequest",
              "Unauthorized",
              "Forbidden",
              "NotFound",
              "MethodNotAllowed",
              "Conflict",
              "Gone",
              "Unprocessable",
              "FailedDependency",
              "ServerError"
            ]
          },
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "ErrorStatus",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "getDatasetList_ownership_parameter": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.GetDatasetListOwnershipParameter",
        "model": {
          "name": "getDatasetList_ownership_parameter",
          "schemaName": "getDatasetList_ownership_parameter",
          "classname": "GetDatasetListOwnershipParameter",
          "classVarName": "getDatasetListOwnershipParameter",
          "dataType": "String",
          "classFilename": "GetDatasetListOwnershipParameter",
          "isString": true,
          "allowableValues": {
            "values": [
              "any",
              "owned",
              "shared"
            ],
            "enumVars": [
              {
                "name": "Any",
                "isString": true,
                "value": "\"any\""
              },
              {
                "name": "Owned",
                "isString": true,
                "value": "\"owned\""
              },
              {
                "name": "Shared",
                "isString": true,
                "value": "\"shared\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "GetDatasetListOwnershipParameter",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Install_Target": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.InstallTargetID",
        "model": {
          "name": "Install_Target",
          "schemaName": "Install_Target",
          "classname": "InstallTargetID",
          "title": "Install Target",
          "classVarName": "installTarget",
          "dataType": "String",
          "classFilename": "InstallTargetID",
          "isString": true,
          "allowableValues": {
            "values": [
              "AmoebaDB",
              "ClinEpiDB",
              "CryptoDB",
              "FungiDB",
              "GiardiaDB",
              "HostDB",
              "MicrobiomeDB",
              "MicrosporidiaDB",
              "OrthoMCL",
              "PiroplasmaDB",
              "PlasmoDB",
              "ToxoDB",
              "TrichDB",
              "TriTrypDB",
              "VectorBase",
              "VEuPathDB"
            ],
            "enumVars": [
              {
                "name": "AmoebaDB",
                "isString": true,
                "value": "\"AmoebaDB\""
              },
              {
                "name": "ClinEpiDB",
                "isString": true,
                "value": "\"ClinEpiDB\""
              },
              {
                "name": "CryptoDB",
                "isString": true,
                "value": "\"CryptoDB\""
              },
              {
                "name": "FungiDB",
                "isString": true,
                "value": "\"FungiDB\""
              },
              {
                "name": "GiardiaDB",
                "isString": true,
                "value": "\"GiardiaDB\""
              },
              {
                "name": "HostDB",
                "isString": true,
                "value": "\"HostDB\""
              },
              {
                "name": "MicrobiomeDB",
                "isString": true,
                "value": "\"MicrobiomeDB\""
              },
              {
                "name": "MicrosporidiaDB",
                "isString": true,
                "value": "\"MicrosporidiaDB\""
              },
              {
                "name": "OrthoMCL",
                "isString": true,
                "value": "\"OrthoMCL\""
              },
              {
                "name": "PiroplasmaDB",
                "isString": true,
                "value": "\"PiroplasmaDB\""
              },
              {
                "name": "PlasmoDB",
                "isString": true,
                "value": "\"PlasmoDB\""
              },
              {
                "name": "ToxoDB",
                "isString": true,
                "value": "\"ToxoDB\""
              },
              {
                "name": "TrichDB",
                "isString": true,
                "value": "\"TrichDB\""
              },
              {
                "name": "TriTrypDB",
                "isString": true,
                "value": "\"TriTrypDB\""
              },
              {
                "name": "VectorBase",
                "isString": true,
                "value": "\"VectorBase\""
              },
              {
                "name": "VEuPathDB",
                "isString": true,
                "value": "\"VEuPathDB\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "InstallTargetID",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Install_Target_Status": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.InstallTargetStatus",
        "model": {
          "name": "Install_Target_Status",
          "schemaName": "Install_Target_Status",
          "classname": "InstallTargetStatus",
          "title": "Install Target Status",
          "description": "Entry in a list of install statuses for a dataset.",
          "classVarName": "installTargetStatus",
          "dataType": "Any",
          "classFilename": "InstallTargetStatus",
          "unescapedDescription": "Entry in a list of install statuses for a dataset.",
          "allMandatory": [
            "datasetMeta",
            "target"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "requiredVarsMap": {
            "meta": {
              "openApiType": "InstallTargetStatusMeta",
              "baseName": "meta",
              "complexType": "InstallTargetStatusMeta",
              "getter": "getDatasetMeta",
              "setter": "setDatasetMeta",
              "dataType": "InstallTargetStatusMeta",
              "datatypeWithEnum": "InstallTargetStatusMeta",
              "name": "datasetMeta",
              "baseType": "InstallTargetStatusMeta",
              "example": "null",
              "required": true,
              "isModel": true,
              "nameInCamelCase": "datasetMeta",
              "nameInPascalCase": "DatasetMeta",
              "nameInSnakeCase": "DATASET_META",
              "hasSanitizedName": true,
              "ref": "#/components/schemas/Install_Target_Status_meta"
            },
            "target": {
              "openApiType": "InstallTargetID",
              "baseName": "target",
              "complexType": "InstallTargetID",
              "getter": "getTarget",
              "setter": "setTarget",
              "dataType": "InstallTargetID",
              "datatypeWithEnum": "InstallTargetID",
              "name": "target",
              "baseType": "InstallTargetID",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "allowableValues": {
                "values": [
                  "AmoebaDB",
                  "ClinEpiDB",
                  "CryptoDB",
                  "FungiDB",
                  "GiardiaDB",
                  "HostDB",
                  "MicrobiomeDB",
                  "MicrosporidiaDB",
                  "OrthoMCL",
                  "PiroplasmaDB",
                  "PlasmoDB",
                  "ToxoDB",
                  "TrichDB",
                  "TriTrypDB",
                  "VectorBase",
                  "VEuPathDB"
                ]
              },
              "nameInCamelCase": "target",
              "nameInPascalCase": "Target",
              "nameInSnakeCase": "TARGET",
              "ref": "#/components/schemas/Install_Target"
            }
          },
          "properties": [
            {
              "openApiType": "InstallTargetID",
              "baseName": "target",
              "complexType": "InstallTargetID",
              "getter": "getTarget",
              "setter": "setTarget",
              "dataType": "InstallTargetID",
              "datatypeWithEnum": "InstallTargetID",
              "name": "target",
              "baseType": "InstallTargetID",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "AmoebaDB",
                    "isString": true,
                    "value": "\"AmoebaDB\""
                  },
                  {
                    "name": "ClinEpiDB",
                    "isString": true,
                    "value": "\"ClinEpiDB\""
                  },
                  {
                    "name": "CryptoDB",
                    "isString": true,
                    "value": "\"CryptoDB\""
                  },
                  {
                    "name": "FungiDB",
                    "isString": true,
                    "value": "\"FungiDB\""
                  },
                  {
                    "name": "GiardiaDB",
                    "isString": true,
                    "value": "\"GiardiaDB\""
                  },
                  {
                    "name": "HostDB",
                    "isString": true,
                    "value": "\"HostDB\""
                  },
                  {
                    "name": "MicrobiomeDB",
                    "isString": true,
                    "value": "\"MicrobiomeDB\""
                  },
                  {
                    "name": "MicrosporidiaDB",
                    "isString": true,
                    "value": "\"MicrosporidiaDB\""
                  },
                  {
                    "name": "OrthoMCL",
                    "isString": true,
                    "value": "\"OrthoMCL\""
                  },
                  {
                    "name": "PiroplasmaDB",
                    "isString": true,
                    "value": "\"PiroplasmaDB\""
                  },
                  {
                    "name": "PlasmoDB",
                    "isString": true,
                    "value": "\"PlasmoDB\""
                  },
                  {
                    "name": "ToxoDB",
                    "isString": true,
                    "value": "\"ToxoDB\""
                  },
                  {
                    "name": "TrichDB",
                    "isString": true,
                    "value": "\"TrichDB\""
                  },
                  {
                    "name": "TriTrypDB",
                    "isString": true,
                    "value": "\"TriTrypDB\""
                  },
                  {
                    "name": "VectorBase",
                    "isString": true,
                    "value": "\"VectorBase\""
                  },
                  {
                    "name": "VEuPathDB",
                    "isString": true,
                    "value": "\"VEuPathDB\""
                  }
                ],
                "values": [
                  "AmoebaDB",
                  "ClinEpiDB",
                  "CryptoDB",
                  "FungiDB",
                  "GiardiaDB",
                  "HostDB",
                  "MicrobiomeDB",
                  "MicrosporidiaDB",
                  "OrthoMCL",
                  "PiroplasmaDB",
                  "PlasmoDB",
                  "ToxoDB",
                  "TrichDB",
                  "TriTrypDB",
                  "VectorBase",
                  "VEuPathDB"
                ]
              },
              "nameInCamelCase": "target",
              "nameInPascalCase": "Target",
              "nameInSnakeCase": "TARGET",
              "ref": "#/components/schemas/Install_Target"
            },
            {
              "openApiType": "InstallTargetStatusMeta",
              "baseName": "meta",
              "complexType": "InstallTargetStatusMeta",
              "getter": "getDatasetMeta",
              "setter": "setDatasetMeta",
              "dataType": "InstallTargetStatusMeta",
              "datatypeWithEnum": "InstallTargetStatusMeta",
              "name": "datasetMeta",
              "baseType": "InstallTargetStatusMeta",
              "example": "null",
              "required": true,
              "isModel": true,
              "nameInCamelCase": "datasetMeta",
              "nameInPascalCase": "DatasetMeta",
              "nameInSnakeCase": "DATASET_META",
              "hasSanitizedName": true,
              "ref": "#/components/schemas/Install_Target_Status_meta"
            },
            {
              "openApiType": "InstallTargetStatusMeta",
              "baseName": "data",
              "complexType": "InstallTargetStatusMeta",
              "getter": "getDatasetData",
              "setter": "setDatasetData",
              "dataType": "InstallTargetStatusMeta",
              "datatypeWithEnum": "InstallTargetStatusMeta",
              "name": "datasetData",
              "baseType": "InstallTargetStatusMeta",
              "example": "null",
              "isModel": true,
              "nameInCamelCase": "datasetData",
              "nameInPascalCase": "DatasetData",
              "nameInSnakeCase": "DATASET_DATA",
              "hasSanitizedName": true,
              "ref": "#/components/schemas/Install_Target_Status_meta"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "InstallTargetStatus",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Install_Target_Status_meta": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.InstallTargetStatusMeta",
        "model": {
          "name": "Install_Target_Status_meta",
          "schemaName": "Install_Target_Status_meta",
          "classname": "InstallTargetStatusMeta",
          "classVarName": "installTargetStatusMeta",
          "dataType": "Any",
          "classFilename": "InstallTargetStatusMeta",
          "allMandatory": [
            "lastUpdate",
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty",
            "com.fasterxml.jackson.annotation.JsonFormat",
            "java.time.OffsetDateTime"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "DatasetInstallStatus",
              "baseName": "status",
              "complexType": "DatasetInstallStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "DatasetInstallStatus",
              "datatypeWithEnum": "DatasetInstallStatus",
              "name": "status",
              "baseType": "DatasetInstallStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Running",
                    "isString": true,
                    "value": "\"running\""
                  },
                  {
                    "name": "Complete",
                    "isString": true,
                    "value": "\"complete\""
                  },
                  {
                    "name": "FailedValidation",
                    "isString": true,
                    "value": "\"failed-validation\""
                  },
                  {
                    "name": "FailedInstallation",
                    "isString": true,
                    "value": "\"failed-installation\""
                  },
                  {
                    "name": "ReadyForReinstall",
                    "isString": true,
                    "value": "\"ready-for-reinstall\""
                  },
                  {
                    "name": "MissingDependency",
                    "isString": true,
                    "value": "\"missing-dependency\""
                  }
                ],
                "values": [
                  "running",
                  "complete",
                  "failed-validation",
                  "failed-installation",
                  "ready-for-reinstall",
                  "missing-dependency"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "Running",
                  "Complete",
                  "FailedValidation",
                  "FailedInstallation",
                  "ReadyForReinstall",
                  "MissingDependency"
                ]
              },
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Dataset_Install_Status"
            },
            {
              "openApiType": "string",
              "baseName": "lastUpdate",
              "complexType": "java.time.OffsetDateTime",
              "getter": "getLastUpdate",
              "setter": "setLastUpdate",
              "dataType": "OffsetDateTime",
              "datatypeWithEnum": "OffsetDateTime",
              "dataFormat": "date-time",
              "name": "lastUpdate",
              "baseType": "java.time.OffsetDateTime",
              "title": "RFC-3339 Datetime",
              "pattern": "^\\\\d{4}-\\\\d{2}-\\\\d{2}T\\\\d{2}:\\\\d{2}:\\\\d{2}(?:\\\\.\\\\d+)?(?:Z|[+-]\\\\d{2}:\\\\d{2})?$",
              "example": "null",
              "required": true,
              "isDateTime": true,
              "hasValidation": true,
              "nameInCamelCase": "lastUpdate",
              "nameInPascalCase": "LastUpdate",
              "nameInSnakeCase": "LAST_UPDATE",
              "format": "date-time"
            },
            {
              "openApiType": "array",
              "baseName": "messages",
              "complexType": "ProcessMessage",
              "getter": "getMessages",
              "setter": "setMessages",
              "description": "Warning or error messages returned from the installation process.",
              "dataType": "Set<ProcessMessage>",
              "datatypeWithEnum": "Set<ProcessMessage>",
              "name": "messages",
              "baseType": "Set",
              "containerType": "set",
              "containerTypeMapped": "Set",
              "unescapedDescription": "Warning or error messages returned from the installation process.",
              "example": "null",
              "isContainer": true,
              "isArray": true,
              "items": {
                "openApiType": "ProcessMessage",
                "baseName": "messages",
                "complexType": "ProcessMessage",
                "getter": "getMessages",
                "setter": "setMessages",
                "dataType": "ProcessMessage",
                "datatypeWithEnum": "ProcessMessage",
                "name": "messages",
                "baseType": "ProcessMessage",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "messages",
                "nameInPascalCase": "Messages",
                "nameInSnakeCase": "MESSAGES",
                "ref": "#/components/schemas/Process_Message"
              },
              "mostInnerItems": {
                "openApiType": "ProcessMessage",
                "baseName": "messages",
                "complexType": "ProcessMessage",
                "getter": "getMessages",
                "setter": "setMessages",
                "dataType": "ProcessMessage",
                "datatypeWithEnum": "ProcessMessage",
                "name": "messages",
                "baseType": "ProcessMessage",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "messages",
                "nameInPascalCase": "Messages",
                "nameInSnakeCase": "MESSAGES",
                "ref": "#/components/schemas/Process_Message"
              },
              "hasValidation": true,
              "nameInCamelCase": "messages",
              "nameInPascalCase": "Messages",
              "nameInSnakeCase": "MESSAGES",
              "uniqueItems": true,
              "uniqueItemsBoolean": true
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "InstallTargetStatusMeta",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Internal_Server_Error": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.InternalServerError",
        "model": {
          "parent": "APIError",
          "parentSchema": "API_Error",
          "interfaces": [
            "APIError"
          ],
          "allOf": [
            "APIError"
          ],
          "name": "Internal_Server_Error",
          "schemaName": "Internal_Server_Error",
          "classname": "InternalServerError",
          "title": "Internal Server Error",
          "classVarName": "internalServerError",
          "dataType": "APIError",
          "classFilename": "InternalServerError",
          "allMandatory": [
            "requestId",
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "emptyVars": true,
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "x-discriminator-value": "server-error",
            "x-has-data-class-body": true
          },
          "composedSchemas": {
            "allOf": [
              {
                "openApiType": "APIError",
                "baseName": "all_of_0",
                "complexType": "APIError",
                "getter": "getAllOf0",
                "setter": "setAllOf0",
                "dataType": "APIError",
                "datatypeWithEnum": "APIError",
                "name": "allOf0",
                "baseType": "APIError",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "allOf0",
                "nameInPascalCase": "AllOf0",
                "nameInSnakeCase": "ALL_OF0",
                "hasSanitizedName": true,
                "ref": "#/components/schemas/API_Error"
              }
            ]
          },
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "ErrorStatus",
              "baseName": "status",
              "complexType": "ErrorStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "ErrorStatus",
              "datatypeWithEnum": "ErrorStatus",
              "name": "status",
              "defaultValue": "ErrorStatus.ServerError",
              "baseType": "ErrorStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "isReadOnly": true,
              "isOverridden": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "BadRequest",
                    "isString": true,
                    "value": "\"bad-request\""
                  },
                  {
                    "name": "Unauthorized",
                    "isString": true,
                    "value": "\"unauthorized\""
                  },
                  {
                    "name": "Forbidden",
                    "isString": true,
                    "value": "\"forbidden\""
                  },
                  {
                    "name": "NotFound",
                    "isString": true,
                    "value": "\"not-found\""
                  },
                  {
                    "name": "MethodNotAllowed",
                    "isString": true,
                    "value": "\"bad-method\""
                  },
                  {
                    "name": "Conflict",
                    "isString": true,
                    "value": "\"conflict\""
                  },
                  {
                    "name": "Gone",
                    "isString": true,
                    "value": "\"gone\""
                  },
                  {
                    "name": "Unprocessable",
                    "isString": true,
                    "value": "\"invalid-input\""
                  },
                  {
                    "name": "FailedDependency",
                    "isString": true,
                    "value": "\"failed-dependency\""
                  },
                  {
                    "name": "ServerError",
                    "isString": true,
                    "value": "\"server-error\""
                  }
                ],
                "values": [
                  "bad-request",
                  "unauthorized",
                  "forbidden",
                  "not-found",
                  "bad-method",
                  "conflict",
                  "gone",
                  "invalid-input",
                  "failed-dependency",
                  "server-error"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "BadRequest",
                  "Unauthorized",
                  "Forbidden",
                  "NotFound",
                  "MethodNotAllowed",
                  "Conflict",
                  "Gone",
                  "Unprocessable",
                  "FailedDependency",
                  "ServerError"
                ]
              },
              "isInherited": true,
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Error_Status"
            },
            {
              "openApiType": "string",
              "baseName": "message",
              "getter": "getMessage",
              "setter": "setMessage",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "message",
              "baseType": "String",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": true,
              "isInherited": true,
              "nameInCamelCase": "message",
              "nameInPascalCase": "Message",
              "nameInSnakeCase": "MESSAGE"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "InternalServerError",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Not_Found_Error": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.NotFoundError",
        "model": {
          "parent": "APIError",
          "parentSchema": "API_Error",
          "interfaces": [
            "APIError"
          ],
          "allOf": [
            "APIError"
          ],
          "name": "Not_Found_Error",
          "schemaName": "Not_Found_Error",
          "classname": "NotFoundError",
          "title": "Not Found Error",
          "classVarName": "notFoundError",
          "dataType": "APIError",
          "classFilename": "NotFoundError",
          "allMandatory": [
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "emptyVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "x-discriminator-value": "not-found",
            "x-has-data-class-body": true
          },
          "composedSchemas": {
            "allOf": [
              {
                "openApiType": "APIError",
                "baseName": "all_of_0",
                "complexType": "APIError",
                "getter": "getAllOf0",
                "setter": "setAllOf0",
                "dataType": "APIError",
                "datatypeWithEnum": "APIError",
                "name": "allOf0",
                "baseType": "APIError",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "allOf0",
                "nameInPascalCase": "AllOf0",
                "nameInSnakeCase": "ALL_OF0",
                "hasSanitizedName": true,
                "ref": "#/components/schemas/API_Error"
              },
              {
                "openApiType": "Any",
                "baseName": "all_of_1",
                "getter": "getAllOf1",
                "setter": "setAllOf1",
                "dataType": "Any",
                "datatypeWithEnum": "Any",
                "name": "allOf1",
                "baseType": "Any",
                "example": "null",
                "isAnyType": true,
                "isNullable": true,
                "nameInCamelCase": "allOf1",
                "nameInPascalCase": "AllOf1",
                "nameInSnakeCase": "ALL_OF1",
                "hasSanitizedName": true
              }
            ]
          },
          "testCases": null,
          "isAnyType": true,
          "properties": [
            {
              "openApiType": "ErrorStatus",
              "baseName": "status",
              "complexType": "ErrorStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "ErrorStatus",
              "datatypeWithEnum": "ErrorStatus",
              "name": "status",
              "defaultValue": "ErrorStatus.NotFound",
              "baseType": "ErrorStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "isReadOnly": true,
              "isOverridden": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "BadRequest",
                    "isString": true,
                    "value": "\"bad-request\""
                  },
                  {
                    "name": "Unauthorized",
                    "isString": true,
                    "value": "\"unauthorized\""
                  },
                  {
                    "name": "Forbidden",
                    "isString": true,
                    "value": "\"forbidden\""
                  },
                  {
                    "name": "NotFound",
                    "isString": true,
                    "value": "\"not-found\""
                  },
                  {
                    "name": "MethodNotAllowed",
                    "isString": true,
                    "value": "\"bad-method\""
                  },
                  {
                    "name": "Conflict",
                    "isString": true,
                    "value": "\"conflict\""
                  },
                  {
                    "name": "Gone",
                    "isString": true,
                    "value": "\"gone\""
                  },
                  {
                    "name": "Unprocessable",
                    "isString": true,
                    "value": "\"invalid-input\""
                  },
                  {
                    "name": "FailedDependency",
                    "isString": true,
                    "value": "\"failed-dependency\""
                  },
                  {
                    "name": "ServerError",
                    "isString": true,
                    "value": "\"server-error\""
                  }
                ],
                "values": [
                  "bad-request",
                  "unauthorized",
                  "forbidden",
                  "not-found",
                  "bad-method",
                  "conflict",
                  "gone",
                  "invalid-input",
                  "failed-dependency",
                  "server-error"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "BadRequest",
                  "Unauthorized",
                  "Forbidden",
                  "NotFound",
                  "MethodNotAllowed",
                  "Conflict",
                  "Gone",
                  "Unprocessable",
                  "FailedDependency",
                  "ServerError"
                ]
              },
              "isInherited": true,
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Error_Status"
            },
            {
              "openApiType": "string",
              "baseName": "message",
              "getter": "getMessage",
              "setter": "setMessage",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "message",
              "baseType": "String",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": true,
              "isInherited": true,
              "nameInCamelCase": "message",
              "nameInPascalCase": "Message",
              "nameInSnakeCase": "MESSAGE"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "NotFoundError",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Process_Message": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.ProcessMessage",
        "model": {
          "name": "Process_Message",
          "schemaName": "Process_Message",
          "classname": "ProcessMessage",
          "title": "Process Message",
          "classVarName": "processMessage",
          "dataType": "Any",
          "classFilename": "ProcessMessage",
          "allMandatory": [
            "kind",
            "message"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "ProcessMessageKind",
              "baseName": "kind",
              "complexType": "ProcessMessageKind",
              "getter": "getKind",
              "setter": "setKind",
              "dataType": "ProcessMessageKind",
              "datatypeWithEnum": "ProcessMessageKind",
              "name": "kind",
              "baseType": "ProcessMessageKind",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "Info",
                    "isString": true,
                    "value": "\"info\""
                  },
                  {
                    "name": "Warning",
                    "isString": true,
                    "value": "\"warning\""
                  },
                  {
                    "name": "Error",
                    "isString": true,
                    "value": "\"error\""
                  }
                ],
                "values": [
                  "info",
                  "warning",
                  "error"
                ]
              },
              "nameInCamelCase": "kind",
              "nameInPascalCase": "Kind",
              "nameInSnakeCase": "KIND",
              "ref": "#/components/schemas/Process_Message_kind"
            },
            {
              "openApiType": "string",
              "baseName": "message",
              "getter": "getMessage",
              "setter": "setMessage",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "message",
              "baseType": "String",
              "minLength": 3,
              "example": "null",
              "required": true,
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "message",
              "nameInPascalCase": "Message",
              "nameInSnakeCase": "MESSAGE"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "ProcessMessage",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Process_Message_kind": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.ProcessMessageKind",
        "model": {
          "name": "Process_Message_kind",
          "schemaName": "Process_Message_kind",
          "classname": "ProcessMessageKind",
          "classVarName": "processMessageKind",
          "dataType": "String",
          "classFilename": "ProcessMessageKind",
          "isString": true,
          "allowableValues": {
            "values": [
              "info",
              "warning",
              "error"
            ],
            "enumVars": [
              {
                "name": "Info",
                "isString": true,
                "value": "\"info\""
              },
              {
                "name": "Warning",
                "isString": true,
                "value": "\"warning\""
              },
              {
                "name": "Error",
                "isString": true,
                "value": "\"error\""
              }
            ]
          },
          "imports": [
            "com.fasterxml.jackson.annotation.JsonCreator",
            "com.fasterxml.jackson.annotation.JsonValue"
          ],
          "isEnum": true,
          "testCases": null
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "ProcessMessageKind",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "Unauthorized_Request_Error": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.UnauthorizedRequestError",
        "model": {
          "parent": "APIError",
          "parentSchema": "API_Error",
          "interfaces": [
            "APIError"
          ],
          "allOf": [
            "APIError"
          ],
          "name": "Unauthorized_Request_Error",
          "schemaName": "Unauthorized_Request_Error",
          "classname": "UnauthorizedRequestError",
          "title": "Unauthorized Request Error",
          "classVarName": "unauthorizedRequestError",
          "dataType": "APIError",
          "classFilename": "UnauthorizedRequestError",
          "allMandatory": [
            "status"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "emptyVars": true,
          "hasEnums": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "vendorExtensions": {
            "x-discriminator-value": "unauthorized",
            "x-has-data-class-body": true
          },
          "composedSchemas": {
            "allOf": [
              {
                "openApiType": "APIError",
                "baseName": "all_of_0",
                "complexType": "APIError",
                "getter": "getAllOf0",
                "setter": "setAllOf0",
                "dataType": "APIError",
                "datatypeWithEnum": "APIError",
                "name": "allOf0",
                "baseType": "APIError",
                "example": "null",
                "isModel": true,
                "nameInCamelCase": "allOf0",
                "nameInPascalCase": "AllOf0",
                "nameInSnakeCase": "ALL_OF0",
                "hasSanitizedName": true,
                "ref": "#/components/schemas/API_Error"
              },
              {
                "openApiType": "Any",
                "baseName": "all_of_1",
                "getter": "getAllOf1",
                "setter": "setAllOf1",
                "dataType": "Any",
                "datatypeWithEnum": "Any",
                "name": "allOf1",
                "baseType": "Any",
                "example": "null",
                "isAnyType": true,
                "isNullable": true,
                "nameInCamelCase": "allOf1",
                "nameInPascalCase": "AllOf1",
                "nameInSnakeCase": "ALL_OF1",
                "hasSanitizedName": true
              }
            ]
          },
          "testCases": null,
          "isAnyType": true,
          "properties": [
            {
              "openApiType": "ErrorStatus",
              "baseName": "status",
              "complexType": "ErrorStatus",
              "getter": "getStatus",
              "setter": "setStatus",
              "dataType": "ErrorStatus",
              "datatypeWithEnum": "ErrorStatus",
              "name": "status",
              "defaultValue": "ErrorStatus.Unauthorized",
              "baseType": "ErrorStatus",
              "example": "null",
              "required": true,
              "isEnumRef": true,
              "isReadOnly": true,
              "isOverridden": true,
              "allowableValues": {
                "enumVars": [
                  {
                    "name": "BadRequest",
                    "isString": true,
                    "value": "\"bad-request\""
                  },
                  {
                    "name": "Unauthorized",
                    "isString": true,
                    "value": "\"unauthorized\""
                  },
                  {
                    "name": "Forbidden",
                    "isString": true,
                    "value": "\"forbidden\""
                  },
                  {
                    "name": "NotFound",
                    "isString": true,
                    "value": "\"not-found\""
                  },
                  {
                    "name": "MethodNotAllowed",
                    "isString": true,
                    "value": "\"bad-method\""
                  },
                  {
                    "name": "Conflict",
                    "isString": true,
                    "value": "\"conflict\""
                  },
                  {
                    "name": "Gone",
                    "isString": true,
                    "value": "\"gone\""
                  },
                  {
                    "name": "Unprocessable",
                    "isString": true,
                    "value": "\"invalid-input\""
                  },
                  {
                    "name": "FailedDependency",
                    "isString": true,
                    "value": "\"failed-dependency\""
                  },
                  {
                    "name": "ServerError",
                    "isString": true,
                    "value": "\"server-error\""
                  }
                ],
                "values": [
                  "bad-request",
                  "unauthorized",
                  "forbidden",
                  "not-found",
                  "bad-method",
                  "conflict",
                  "gone",
                  "invalid-input",
                  "failed-dependency",
                  "server-error"
                ]
              },
              "vendorExtensions": {
                "x-enum-varnames": [
                  "BadRequest",
                  "Unauthorized",
                  "Forbidden",
                  "NotFound",
                  "MethodNotAllowed",
                  "Conflict",
                  "Gone",
                  "Unprocessable",
                  "FailedDependency",
                  "ServerError"
                ]
              },
              "isInherited": true,
              "nameInCamelCase": "status",
              "nameInPascalCase": "Status",
              "nameInSnakeCase": "STATUS",
              "ref": "#/components/schemas/Error_Status"
            },
            {
              "openApiType": "string",
              "baseName": "message",
              "getter": "getMessage",
              "setter": "setMessage",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "message",
              "baseType": "String",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "isOverridden": true,
              "isInherited": true,
              "nameInCamelCase": "message",
              "nameInPascalCase": "Message",
              "nameInSnakeCase": "MESSAGE"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "UnauthorizedRequestError",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  },
  "WDK_User_Info": {
    "appVersion": "1.7.0",
    "featureConditionalHeaders": false,
    "featureResources": true,
    "inputSpec": "/home/ellie/Code/vpdb/env/jvm/service/vdi/module/rest-service/openapi.yml",
    "nonPublicApi": false,
    "models": [
      {
        "importPath": "vdi.service.rest.generated.model.WDKUserInfo",
        "model": {
          "name": "WDK_User_Info",
          "schemaName": "WDK_User_Info",
          "classname": "WDKUserInfo",
          "title": "WDK User Info",
          "classVarName": "wdKUserInfo",
          "dataType": "Any",
          "classFilename": "WDKUserInfo",
          "allMandatory": [
            "userId"
          ],
          "imports": [
            "com.fasterxml.jackson.annotation.JsonProperty"
          ],
          "hasVars": true,
          "hasRequired": true,
          "hasOptional": true,
          "hasOnlyReadOnly": false,
          "testCases": null,
          "isModel": true,
          "properties": [
            {
              "openApiType": "integer",
              "baseName": "userId",
              "getter": "getUserId",
              "setter": "setUserId",
              "description": "VEuPathDB User ID",
              "dataType": "Long",
              "datatypeWithEnum": "Long",
              "dataFormat": "int64",
              "name": "userId",
              "baseType": "Long",
              "unescapedDescription": "VEuPathDB User ID",
              "example": "null",
              "minimum": "1",
              "required": true,
              "isPrimitiveType": true,
              "isNumeric": true,
              "isLong": true,
              "vendorExtensions": {
                "x-unsigned": true
              },
              "hasValidation": true,
              "nameInCamelCase": "userId",
              "nameInPascalCase": "UserId",
              "nameInSnakeCase": "USER_ID",
              "format": "int64"
            },
            {
              "openApiType": "string",
              "baseName": "firstName",
              "getter": "getFirstName",
              "setter": "setFirstName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "firstName",
              "baseType": "String",
              "minLength": 2,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "firstName",
              "nameInPascalCase": "FirstName",
              "nameInSnakeCase": "FIRST_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "lastName",
              "getter": "getLastName",
              "setter": "setLastName",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "lastName",
              "baseType": "String",
              "minLength": 2,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "lastName",
              "nameInPascalCase": "LastName",
              "nameInSnakeCase": "LAST_NAME"
            },
            {
              "openApiType": "string",
              "baseName": "email",
              "getter": "getEmail",
              "setter": "setEmail",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "dataFormat": "idn-email",
              "name": "email",
              "baseType": "String",
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "nameInCamelCase": "email",
              "nameInPascalCase": "Email",
              "nameInSnakeCase": "EMAIL",
              "format": "idn-email"
            },
            {
              "openApiType": "string",
              "baseName": "organization",
              "getter": "getOrganization",
              "setter": "setOrganization",
              "dataType": "String",
              "datatypeWithEnum": "String",
              "name": "organization",
              "baseType": "String",
              "minLength": 3,
              "example": "null",
              "isPrimitiveType": true,
              "isString": true,
              "hasValidation": true,
              "nameInCamelCase": "organization",
              "nameInPascalCase": "Organization",
              "nameInSnakeCase": "ORGANIZATION"
            }
          ]
        }
      }
    ],
    "package": "vdi.service.rest.generated.model",
    "imports": [],
    "featureAutoHead": true,
    "version": "1.7.0",
    "interfaceOnly": true,
    "generateWebhooks": false,
    "featureHSTS": true,
    "generatedYear": "2025",
    "modelPackage": "vdi.service.rest.generated.model",
    "sourceFolder": "src/generated/kotlin",
    "enumPropertyNaming": "PascalCase",
    "hideGenerationTimestamp": true,
    "featureCORS": false,
    "generatorVersion": "7.13.0",
    "apiPackage": "vdi.service.rest.generated.api",
    "classname": "WDKUserInfo",
    "featureCompression": true,
    "generatedDate": "2025-05-26T19:53:31.213471291-04:00[US/Eastern]",
    "generateRecursiveDependentModels": false,
    "featureMetrics": true
  }
}