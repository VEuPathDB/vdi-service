on:
  workflow_dispatch: {}
  push:
    branches:
    - main
    paths:
    - 'docs/vdi-api.html'
    - 'service/schema/**'

jobs:
  prep:
    name: Get Doc Target Versions
    runs-on: ubuntu-latest
    outputs:
      prod_tag: ${{ steps.prod_version.version }}
      qa_tag: ${{ steps.qa_version.version }}
    steps:
    - name: Clone Production Tagger
      uses: actions/checkout@v4
      with:
        repository: 'VEuPathDB/tagger'
        ref: 'production'
        token: '${{ secrets.GH_TOKEN }}'
    - name: Get Production Tag
      run: |-
        echo version=$(grep vdi-service versions.yml | awk '{ print $2 }') >> "$GITHUB_OUTPUT"
      id: prod_version
    - name: Checkout QA
      uses: actions/checkout@v4
      with:
        ref: 'qa'
    - name: Get QA Tag
      run: |-
        echo version=$(grep vdi-service versions.yml | awk '{ print $2 }') >> "$GITHUB_OUTPUT"
      id: qa_version

  build:
    name: Build API Docs
    runs-on: ubuntu-latest
    needs: prep
    steps:

    - name: Install Java 21
      uses: actions/setup-java@v4
      with:
        java-version: '21'
        distribution: corretto
    - name: Install Gradle 8.14
      uses: gradle/actions/setup-gradle@v4
      with:
        gradle-version: '8.14'

    - name: Install NPM
      uses: actions/setup-node@v4
    - name: Install NPM Packages
      run: npm i -g raml2html raml2html-modern-theme

    - name: Checkout Dev
      uses: actions/checkout@v4

    - name: Build Dev Docs
      run: make generate-service-docs OUTPUT_DOC_DIR=tmpdocs/dev/
      env:
        GITHUB_USERNAME: ${{ secrets.GH_USERNAME }}
        GITHUB_TOKEN: ${{ secrets.GH_TOKEN }}

    - name: Checkout QA
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.prep.outputs.qa_tag }}
    - name: Build QA Docs
#      run: make generate-service-docs # TODO: when dev goes to QA use this instead of below
      run: mkdir tmpdocs/qa/ && cp docs/vdi-api.html tmpdocs/qa/vdi-api.html

    - name: Checkout Prod
      uses: actions/checkout@v4
      with:
        ref: ${{ needs.prep.outputs.prod_tag }}
    - name: Build Prod Docs
      #      run: make generate-service-docs # TODO: when dev goes to PROD use this instead of below
      run: mkdir tmpdocs/prod/ && cp docs/vdi-api.html tmpdocs/prod/vdi-api.html

    - uses: actions/upload-pages-artifact@v3
      with:
        path: tmpdocs/

  deploy:
    name: Deploy API Docs
    runs-on: ubuntu-latest
    needs: build
    permissions:
      pages: write
      id-token: write
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    steps:
    - name: Deploy
      uses: actions/deploy-pages@v4
