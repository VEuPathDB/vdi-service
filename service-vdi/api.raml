#%RAML 1.0 Extension

extends: https://raw.githubusercontent.com/VEuPathDB/docs-api-schema/v2.2.0/libraries/base-service.raml

title: VEuPathDB Dataset Installer
version: 1.0.0
mediaType: application/json

uses:
  lib: schema/library.raml

/vdi-datasets:
  displayName: Datasets

  get:
    displayName: List Datasets
    description: |
      Returns a list of datasets available to the requesting user, optionally
      filtered by query parameters.

      Results are sorted by creation date in reverse order.
    queryParameters:
      project_id:
        displayName: Project ID Filter
        description: |
          ID of the VEuPathDB project that results should be filtered to.

          This means only datasets that are relevant to the project ID given
          will be returned.
        type: lib.ProjectID
        example: PlasmoDB
        required: false
        default: null
      ownership:
        displayName: Dataset Ownership Filter
        description: |
          Ownership status filter.

          Enum of:

          * `any`
          * `owned`
          * `shared`

          If set to `any` the results are not filtered.

          If set to `owned`, the results will be filtered to only results that
          are owned by the requesting user.

          If set to `shared`, the results will be filtered to only results that
          are shared with the requesting user.
        type: string
        default: any
        required: false
      offset:
        displayName: Result Offset
        description: |
          This many results will be skipped before the first result returned.

          Used to implement result pagination.
        type: integer
        default: 0
        required: false
      limit:
        displayName: Result Count Limit
        description: |
          Limits the number of results returned to this count.

          Used to implement result pagination.
        type: integer
        default: 100
        minimum: 1
        maximum: 100
        required: false
    responses:
      200:
        description: Success
        body:
          type: lib.DatasetListEntry[]
          example:
          - datasetID: b18dcdf1a19c9415cd6594c00d611699
            owner:
              userID: 123456
              displayName: Joe User
              organization: University of Joe
            datasetType:
              name: ISA
              version: "1.0"
            name: My Dataset
            summary: A short description of my dataset.
            description: A longer description of my dataset.
            projectIDs:
            - PlasmoDB
            - ToxoDB
            status:
              import: imported
              install:
              - projectID: PlasmoDB
                status: failed
              - projectID: ToxoDB
                status: complete
      400:
        description: Bad Query Parameter(s)
        body: lib.BadRequestError
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      500:
        description: Internal Error
        body: lib.ServerError

  post:
    displayName: Upload Dataset
    description: |
      `multipart/form-data` HTTP `POST` request to upload a new dataset.

      Note, the body description below is of the multipart form data fields and
      not of a JSON object.

      The `meta` field, however, is expected to be JSON text.
    body:
      multipart/form-data:
        type: lib.DatasetPostRequest
    responses:
      200:
        description: Success
        body:
          type: lib.DatasetPostResponse
          example:
            datasetID: b18dcdf1a19c9415cd6594c00d611699
      400:
        description: Request body did not resemble the expected form.
        body: lib.BadRequestError
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      422:
        description: Request failed validation.
        body: lib.UnprocessableEntityError
      500:
        description: Internal server error
        body: lib.ServerError

/vdi-datasets/rpc:
  displayName: RPC

  /reconcile:
    displayName: Reconciliation
    post:
      displayName: Run Reconciliation
      description: |
        Runs the Dataset Reconciliation process.

        TODO: DESCRIBE THIS PROCESS!
      body:
        application/json:
          type: lib.ReconciliationRequest
          example:
            authorization: 964d72e72d053d501f2949969849b96c31d7c3e829be03400641f80b821ef728
      responses:
        204:
          description: Action completed successfully.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        500:
          description: Internal server error.
          body: lib.ServerError

  /install-cleanup:
    displayName: Install Cleanup
    post:
      displayName: Run Install Cleanup
      description: |
        Marks all or target datasets that are in a status of installation
        failure into a ready-for-reinstall status.

        The request body should specify exactly one of `all` or `targets` to
        select whether install cleanup should target all failed datasets across
        all sites, or if install cleanup should target only specific datasets on
        specific sites.

        If the request specifies neither `all` or `targets` the endpoint will do
        nothing.
      body:
        application/json:
          type: lib.InstallCleanupRequest
          examples:
            all:
              displayName: All Example
              value:
                authorization: 7f55a0ed8b021080de00960cc73768fb31d7c3e829be03400641f80b821ef728
                all: true
            targeted:
              displayName: Target Example
              value:
                authorization: 7f55a0ed8b021080de00960cc73768fb31d7c3e829be03400641f80b821ef728
                targets:
                - datasetID: 404a6e35ea5384667d3527e6bd89f3a8
                  projectID: PlasmoDB
      responses:
        204:
          description: Action completed successfully.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        500:
          description: Internal server error.
          body: lib.ServerError

  /delete-cleanup:
    displayName: Deleted Dataset Cleanup
    post:
      displayName: Run Deleted Dataset Cleanup
      description: |
        Permanently delete jobs that were soft deleted more than 24 hours prior
        to the execution of this task.
      body:
        application/json:
          type: lib.DeleteCleanupRequest
          example:
            authorization: 26d881d64cac205a140a3329e7fc686ded15d1dce86231a921bad0bd6506af9b
      responses:
        204:
          description: Action completed successfully.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        500:
          description: Internal server error.
          body: lib.ServerError

/vdi-datasets/{vd-id}:
  displayName: Dataset by ID

  uriParameters:
    vd-id: lib.VDI-ID

  get:
    displayName: Lookup Dataset
    description: |
      Fetch details about a dataset and its status(es).
    responses:
      200:
        description: Target dataset was located and returned.
        body:
          type: lib.DatasetDetails
          example:
            datasetID: b18dcdf1a19c9415cd6594c00d611699
            owner:
              userID: 123456
              displayName: Joe User
              organization: University of Joe
            datasetType:
              name: ISA
              version: "1.0"
            name: My Dataset
            summary: A short description of my dataset.
            description: A longer description of my dataset.
            projectIDs:
            - PlasmoDB
            - ToxoDB
            importMessages:
            - Import warning 1
            - Import warning 2
            installMessages:
              PlasmoDB:
              - Install warning 1
              - Install warning 2
              - Install Error
            status:
              import: imported
              install:
              - projectID: PlasmoDB
                status: failed
              - projectID: ToxoDB
                status: complete
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      404:
        description: |
          Target dataset was not located or is not visible to the requesting
          user.
        body: lib.NotFoundError
      500:
        description: Internal server error.
        body: lib.ServerError

  patch:
    displayName: Update Dataset
    description: |
      Updates the metadata for a target dataset.
    body:
      application/json:
        type: lib.DatasetPatchRequest
        example:
          name: My Dataset
          summary: A short summary of my dataset.
          description: A longer description of my dataset.
    responses:
      204:
        description: Target dataset metadata was updated.
      400:
        description: Request body did not resemble the expected JSON form.
        body: lib.BadRequestError
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      403:
        description: Target dataset is not owned by the requesting user.
        body: lib.ForbiddenError
      404:
        description: Target dataset was not found.
        body: lib.NotFoundError
      422:
        description: Request body failed validation.
        body: lib.UnprocessableEntityError
      500:
        description: Internal server error.
        body: lib.ServerError

  delete:
    displayName: Delete Dataset
    description: |
      Marks the target dataset as deleted.

      Datasets that have been marked as deleted are still recoverable for a
      short period of time before they are permanently deleted from the system.
    responses:
      204:
        description: Target dataset was marked as deleted.
      401:
        description: Unauthorized
        body: lib.UnauthorizedError
      403:
        description: Target dataset is not owned by the requesting user.
        body: lib.ForbiddenError
      404:
        description: Target dataset was not located.
        body: lib.NotFoundError
      500:
        description: Internal server error.
        body: lib.ServerError


/vdi-datasets/{vd-id}/shares/{user-id}:
  displayName: Dataset Sharing

  uriParameters:
    vd-id: lib.VDI-ID
    user-id:
      displayName: Recipient User ID
      type: lib.User-ID

  /offer:
    displayName: Share Offers
    put:
      displayName: Offer to Share a Dataset
      description: |
        PUT an offer to share a dataset with another target user.
      body:
        application/json:
          type: lib.DatasetShareOffer
          examples:
            grant:
              displayName: Grant Example
              value:
                action: grant
            revoke:
              displayName: Revoke Example
              value:
                action: revoke
      responses:
        204:
          description: Share offer was successfully (re)placed.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized.
          body: lib.UnauthorizedError
        422:
          description: Request body failed validation.
          body: lib.UnprocessableEntityError
        500:
          description: Internal server error.
          body: lib.ServerError
    delete:
      displayName: Revoke an Open Share
      description: |
        `DELETE` an existing offer to share a dataset with another target user.
      responses:
        204:
          description: Share offer was successfully revoked.
        401:
          description: |
            Unauthorized.

            This status is returned when the request contains either no user
            authorization token or an invalid user authorization token.
        403:
          description: |
            Action Forbidden.

            This status is returned when the dataset target of the operation is
            not owned by the requesting user, thus the requesting user is
            forbidden from revoking shares for the dataset.
          body: lib.ForbiddenError
        404:
          description: |
            Resource Not Found.

            This status is returned when either the target dataset or target
            share does not exist.
          body: lib.NotFoundError
        500:
          description: |
            Internal Server Error.

            This status is returned when an unhandled or unexpected issue arises
            when attempting to process the request.
          body: lib.ServerError

  /receipt:
    displayName: Share Receipts
    put:
      displayName: Receive a dataset Share
      description: |
        PUT a receipt of a dataset share offer.  The receipt can either be
        accepting or rejecting the offered share.
      body:
        application/json:
          type: lib.DatasetShareReceipt
          examples:
            accept:
              displayName: Accept Example
              value:
                action: accept
            reject:
              displayName: Reject Example
              value:
                action: reject
      responses:
        204:
          description: Share offer acknowledgement was successfully (re)placed.
        400:
          description: Request body did not resemble the expected JSON form.
          body: lib.BadRequestError
        401:
          description: Unauthorized
          body: lib.UnauthorizedError
        422:
          description: Request body failed validation.
          body: lib.UnprocessableEntityError
        500:
          description: Internal server error.
          body: lib.ServerError
