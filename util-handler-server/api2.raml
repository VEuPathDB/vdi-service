#%RAML 1.0

title: VEuPathDB Dataset Handler Server
version: 1.0.0
mediaType: application/json
description: |
  HTTP API for the VDI Handler Plugin Server.
  
  The VDI Handler Plugin Server is a small HTTP server that collects, organizes,
  and wraps calls to VDI import and install scripts, allowing them to be
  executed via HTTP calls.
  
  Every endpoint declared as part of this API is backed by a shell or system
  call to a "plugin" script being hosted in the same container as this util
  server.

/import:
  displayName: Import Actions

  post:
    displayName: Perform Import Processing
    description: |
      Perform dataset validation and any pre-installation transformation that
      needs to be done.
      
      The output of this endpoint is a tarball containing the processing result
      files that are ready to be imported into the VDI Dataset Store (MinIO at
      the time of this writing)
    body:
      multipart/form-data:
        type: object
        additionalProperties: false
        properties:
          vdi-id:
            type: VDI-ID
            required: true
          payload:
            type: file
            required: true
    responses:
      200:
        description: |
          Success
          
          Server has successfully processed the dataset for import and is
          returning the result.
        body:
          application/octet-stream:
            type: file
      400:
        description: |
          Malformed Request
          
          The request body was malformed in a way that prevented the server from
          parsing it.
        body:
          application/json:
            type: Error400
      418:
        description: Validation Failure
      420:
        description: Transformation Failure
      500:
        description: Server Error

# TODO: how does the server communicate back to the caller that the script failed for validation reasons vs non-validation reasons

/install:
  /meta:
    post:

  /data:

/update:
  /meta:

types:
  VDI-ID:
    displayName: VDI ID
    description: Unique VDI Dataset identifier string.
    type: string
    minLength: 32
    maxLength: 32
    pattern: ^[0-9a-fA-F]{32}$
    example: 78609580dba2787a5cf677d6f334a707

  User-ID:
    displayName: VEuPathDB User ID
    description: Unique user identifier
    type: integer
    format: int64
    minimum: 1
    maximum: 9223372036854775807
    example: 204435

  ProjectID:
    displayName: Project ID
    description: |
      Name or ID of a target VEuPathDB project.

      Valid project IDs are:

      - AmoebaDB
      - CryptoDB
      - FungiDB
      - GiardiaDB
      - HostDB
      - MicrosporidiaDB
      - PiroplasmaDB
      - PlasmoDB
      - ToxoDB
      - TrichDB
      - TriTrypDB
      - VectorBase
      - VEuPathDB
    type: string
    example: PlasmoDB

  DatasetMeta:
    type: object
    additionalProperties: false
    properties:
      type:
        type: DatasetMetaType
        required: true
      projects:
        type: ProjectID[]
        required: true
        minItems: 1
      owner:
        type: User-ID
        required: true
      name:
        type: string
        required: true
      summary:
        type: string
        required: true
      description:
        type: string
        required: true
      dependencies:
        type: DatasetMetaDependency[]
        required: true

  DatasetMetaType:
    type: object
    additionalProperties: false
    properties:
      name:
        type: string
        required: true
      version:
        type: string
        required: true

  DatasetMetaDependency:
    type: object
    additionalProperties: false
    properties:
      resourceIdentifier:
        type: any
        required: true
      resourceVersion:
        type: any
        required: true
      resourceDisplayName:
        type: any
        required: true

  Error400:
    type: object
    additionalProperties: false
    properties:
      message:
        type: string
        required: true

  Error500:
    type: object
    additionalProperties: false
    properties:
      status:
        type: string
        enum:
        - failed-plugin
        - failed-server
        required: true
      message:
        type: string
        required: true
