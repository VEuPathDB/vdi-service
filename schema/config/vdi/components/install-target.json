{
  "$schema": "https://json-schema.org/draft/2020-12/schema",
  "$id": "https://veupathdb.github.io/vdi-service/schema/vdi/install-target.json",
  "title": "Dataset Installation Target",
  "type": "object",
  "properties": {
    "enabled": {
      "title": "Enabled",
      "description": "Whether the install target should be enabled for use in the VDI service.",
      "type": "boolean",
      "default": true
    },
    "targetName": { "$ref": "../../common.json#/$defs/installTarget" },
    "dataTypes": {
      "title": "Supported Data Types",
      "description": "Optional list of data types that the install target supports.\n\nDefaults to supporting all data types from any plugins enabled for the install target.",
      "oneOf": [
        {
          "title": "Specific Data Types",
          "type": "array",
          "items": { "$ref": "plugin.json#/$defs/dataType" },
          "unevaluatedItems": false,
          "uniqueItems": true,
          "minItems": 1
        },
        {
          "title": "Catch-All",
          "type": "array",
          "items": { "const": "*" },
          "minItems": 1,
          "maxItems": 1,
          "unevaluatedItems": false
        }
      ],
      "default": [ "*" ]
    },
    "controlDb": {
      "$comment": "type defined in 'allOf' block below",
      "title": "Dataset Control Database/Schema"
    },
    "dataDb": {
      "$comment": "type defined in 'allOf' block below",
      "title": "Dataset Data Database/Schema"
    },
    "datasetPropertySchema": {
      "title": "Dataset Characteristics Validation Schema",
      "description": "JSON schema used to validate dataset characteristics in the metadata for datasets being installed into this configured target.\n\nIf omitted, datasets for this install target are not permitted to have characteristics fields.",
      "oneOf": [
        {
          "title": "Inline Schema Definition",
          "$ref": "https://json-schema.org/draft/2020-12/schema",
          "examples": [
            {
              "type": "object",
              "properties": {
                "field": {
                  "type": "string"
                }
              },
              "required": [ "field" ]
            }
          ]
        },
        {
          "title": "Remote Schema File",
          "type": "string",
          "pattern": "^(https?)?://([0-9a-zA-Z][\\w-]+(?:\\.[0-9a-zA-Z][\\w-]*)*)((?:/[\\w%.~-]+)+)(\\?.+)?$"
        },
        {
          "title": "Local Schema File",
          "description": "Path to a local schema file.  If the path is absolute, and does not exist in the host filesystem, the service jar contents will be checked as well.",
          "type": "string",
          "minLength": 6,
          "format": "uri-reference",
          "examples": [
            "/etc/vdi/mounted-filesystem-schema.json",
            "/schema/data/jar-resource-schema.json"
          ]
        }
      ]
    }
  },
  "allOf": [
    {
      "if": {
        "oneOf": [
          {
            "title": "Explicitly Enabled",
            "description": "The `enabled` field is explicitly set to `true`.",
            "properties": {
              "enabled": { "const": true }
            }
          },
          {
            "title": "Enabled by Default",
            "description": "The `enabled` field is omitted, using the default value of `true`.",
            "not": {
              "properties": {
                "enabled": { }
              }
            }
          }
        ]
      },
      "then": {
        "properties": {
          "controlDb": { "$ref": "../../common.json#/$defs/database" },
          "dataDb": { "$ref": "../../common.json#/$defs/database" }
        },
        "required": [
          "targetName",
          "controlDb",
          "dataDb"
        ]
      }
    }
  ],
  "unevaluatedProperties": false
}
